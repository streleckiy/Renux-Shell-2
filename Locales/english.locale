RSHELL_ERROR_TITLE=The Renux Shell session has ended.
RSHELL_ERROR_IF_SHELL_MODE=\n\n	When executing a batch file: %1
RSHELL_ERROR_VISIBLE_TEXT=\n	The Renux Shell session has been forcefully terminated.\n\n	It looks like something has caused a fatal error in the Renux code that the developer did not anticipate.\n\n	Information that the developer will need: %1.\n\n	The error was caused by the command: %2
RSHELL_ERROR_VISIBLE_TEXT_BT=\n\n	Attempting to send information about an error to the bug tracker...
RSHELL_ERROR_BT_SEND_ERROR=\n\n	Failed to deliver message! Please inform the developer (streleckiy.ru).
RSHELL_ERROR_BT_SEND_SUCCESS=\n\n	The message was successfully delivered to the developer. Thanks!
RSHELL_ERROR_ATTACHED_CLOSE=\n\n	The program was automatically closed.
RSHELL_CANT_LOAD_MODULE=Unable to load the specified module!\nError %1
RSHELL_ONLY_DLL_AND_EXE_FILES=Only dll and exe files are allowed
RSHELL_FILE_DOES_NOT_FINDED=File %1 not finded
RSHELL_ICON_IN_FILE_NOT_FINDED=Icon %1 in file %2 not finded
RSHELL_ICONS_IN_FILE_NOT_FINDED=Icons in file %1 not finded
RSHELL_INVALID_TYPE_FILE=The resource %1 is of the wrong type. Is the file compressed or encrypted\n Continue?
RSHELL_INCORRECT_RESOURCE=Wrong resource
RSHELL_CANT_CREATE_DIR=Unable to create folder %1\nError %2
RSHELL_CANT_OPEN_FILE_TO_WRITE=Unable to open the %1 for writing.\nError %2
RSHELL_BLOCK_SHUTDOWN_TEXT=Wait. The program will now close...
RSHELL_CATCH_BLOCK_SHUTDOWN_TEXT=%1 in process... Allow?
RSHELL_SERVER_API_CATCH_ERROR=Error. Failed to get server response (%1).
RSHELL_SERVER_API_SERVER_RESPONSE_TO_DEBUG=Server RS response: %1
RSHELL_VK_API_CATCH_ERROR=Error. Failed to get server response (VK API).
RSHELL_VK_API_SERVER_RESPONSE_TO_DEBUG=Response: %1
RSHELL_VK_API_RESPONSE_IS_EMPTY=Error. Server response is empty (VK API).
RSHELL_JSON_TEXT_BAD_KEY_TO_DEBUG=Bad key: %1
RSHELL_JSON_TEXT_BAD_VALUE=Bad value: %1
RSHELL_JSON_TEXT_BAD_JSON_STRING_TO_DEBUG=Bad JSON: %1
RSHELL_RUNCON_CANT_CREATE_PROCESS=Failed to create process.
RSHELL_PARSER_NEED_WRITE_PARAMETERS=You need to specify all the necessary parameters that this command accepts (specified: %1, needed: %2).
RSHELL_WARNING_PARAM_HIDE=After the Renux Shell has executed the command in the background, it will close.
RSHELL_WARNING_PARAM_AIDE=You cannot use this parameter when the program is already running.
RSHELL_WARNING_PARAM_NEW=You cannot use this parameter when the program is already running.
RSHELL_WARNING_PARAM_NOT_PROCESSED=Argument %1 could not be processed.
RSHELL_UNABLE_TO_EXECUTE_ERROR_BETA=Unable to execute (the program is in beta testing)!
RSHELL_DEBUG_WARNING=When the Renux Shell asks for data to process, the debug window stops responding. This is a Windows feature, so there is nothing you can do about it. Also, the speed of the scripts is slightly reduced.
RSHELL_DEBUG_MENU_NAME=Debugging
RSHELL_DEBUG_GO_TO_LINE=Jump to line
RSHELL_DEBUG_EXECUTE_CMD=Execute command
RSHELL_DEBUG_PAUSE_CMD=Pause before command
RSHELL_DEBUG_LISTVIEW_TEXT=Line no.|Line text|Message
RSHELL_DEBUG_GO_FUNC_SUCCESSFUL=The transition to function %1 succeeded.
RSHELL_DEBUG_WRITE_NUM_OF_LINE=Enter the line number in the box below.
RSHELL_DEBUG_GOTO_BUTTON_NAME=Go to
RSHELL_DEBUG_GOTO_CENTER_TEXT=Go to line
RSHELL_DEBUG_GOTO_LINE_SUCCESSFUL=The transition to line #%1 was successful.
RSHELL_DEBUG_WRITE_COMMAND_TO_EXECUTE=Write a command to execute.
RSHELL_DEBUG_BUTTON_EXECUTE_NAME=Execute
RSHELL_DEBUG_EXECUTECMD_CENTER_TEXT=Execute command
RSHELL_PROCESSCMD_TO_DEBUG=The function returned: %1
RSHELL_EXECUTECMD_DONT_HAVE_PERMISSION=You do not have permission to execute this command.
RSHELL_EXECUTECMD_START_PROCESS_MSG_TO_DEBUG=Process started under ID: %1
RSHELL_EXECUTECMD_INVALID_CMD=Unable to recognize command '%1', please use 'HELP' or '?' to open help.
RSHELL_EXECUTECMD_INVALID_CMD_SHELL=The command '%1' could not be processed!
RSHELL_EXECUTECMD_INVALID_CMD_SHELL_MSGBOX=An error occurred while executing batch file '%1':\n\nCommand '%2' could not be processed!
RSHELL_EXECUTECMD_OPERATION_SUCCESSFUL=The operation is complete.
RSHELL_RSAC_ERROR_WRITE_FILE_RSA=Failed to write .rsa file at path:%1\%2.rsa
RSHELL_RSAC_ERROR_WRITE_FILE_RS=Failed to write .rs file at path:%1\%2.rsa
RSHELL_RSAC_ERROR_WRITE_FILE_TIP=Try to run the program as administrator.
RSHELL_RSAC_SUCCESSFULL_INSATALLED=The addon is installed as %1.rsa!
RSHELL_VARNAME_TIME_DAY=.time.day
RSHELL_VARNAME_TIME_MONTH=.time.month
RSHELL_VARNAME_TIME_YEAR=.time.year
RSHELL_VARNAME_TIME_HOUR=.time.hour
RSHELL_VARNAME_TIME_MIN=.time.min
RSHELL_VARNAME_TIME_SEC=.time.sec
RSHELL_VARNAME_TIME_TICKCOUNT=.time.tickcount
RSHELL_VARNAME_TIME_MMM=.time.mmm
RSHELL_VARNAME_TIME_MMMM=.time.mmmm
RSHELL_VARNAME_TIME_DDD=.time.ddd
RSHELL_VARNAME_TIME_DDDD=.time.dddd
RSHELL_VARNAME_CONSOLE_RESULT=.console.result
RSHELL_VARNAME_CONSOLE_WORKINGDIR=.console.workingdir
RSHELL_VARNAME_CONSOLE_SCRIPT=.console.script
RSHELL_VARNAME_CONSOLE_SPACE=.console.space
RSHELL_VARNAME_SYSTEM_CLIPBOARD=.system.clipboard
RSHELL_VARNAME_SCREEN_WIDTH=.screen.width
RSHELL_VARNAME_SCREEN_HEIGHT=.screen.height
RSHELL_VARNAME_CONSOLE_VERSION=.console.version
RSHELL_VARNAME_CONSOLE_ADMIN=.console.isadmin
RSHELL_VARNAME_CONSOLE_ROOTDIR=.console.rootdir
RSHELL_VARNAME_CONSOLE_PATH=.console.path
RSHELL_VARNAME_CONSOLE_NAME=.console.name
RSHELL_VARNAME_CONSOLE_PATHDIR=.console.path.dir
RSHELL_VARNAME_SYSTEM_APPDATA=.system.appdata
RSHELL_VARNAME_SYSTEM_APPDATACOMMON=.system.appdatacommon
RSHELL_VARNAME_SYSTEM_DESKTOP=.system.desktop
RSHELL_VARNAME_SYSTEM_DESKTOPCOMMON=.system.desktopcommon
RSHELL_VARNAME_SYSTEM_IS64BITOS=.system.is64bitos
RSHELL_VARNAME_SYSTEM_DOCUMENTS=.system.documents
RSHELL_VARNAME_SYSTEM_PROGRAMFILES=.system.programfiles
RSHELL_VARNAME_SYSTEM_PROGRAMS=.system.programs
RSHELL_VARNAME_SYSTEM_PROGRAMSCOMMON=.system.programscommon
RSHELL_VARNAME_SYSTEM_STARTMENU=.system.startmenu
RSHELL_VARNAME_SYSTEM_STARTMENUCOMMON=.system.startmenucommon
RSHELL_VARNAME_SYSTEM_STARTUP=.system.startup
RSHELL_VARNAME_SYSTEM_STARTUPCOMMON=.system.startupcommon
RSHELL_VARNAME_SYSTEM_OSTYPE=.system.ostype
RSHELL_VARNAME_SYSTEM_OSVERSION=.system.osversion
RSHELL_VARNAME_SYSTEM_USERNAME=.system.username
RSHELL_VARNAME_SYSTEM_COMPUTERNAME=.system.computername
RSHELL_VARNAME_ENVIRONMENT=.env.%1
RSHELL_CATCH_SET_VARIABLE_WARNING=Failed to assign variable '%1' (possibly illegal characters are used in the name).
RSHELL_ARRAY_CANT_BE_MULTIDIMENSIONAL=An array cannot be multidimensional.
RSHELL_VARIABLE_NAME_CONTAINS_INVALID_CHARACTERS=The variable name contains invalid characters and cannot be named.
RSHELL_ARRAY_NAME_CONTAINS_INVALID_CHARACTERS=The array name contains invalid characters and cannot be named.
RSHELL_ATTACH_WARNING_TITLE=: Warning
RSHELL_ATTACH_WARNING_TEXT=Renux Shell may not work correctly if the standard Windows command line is not used as the command line.\n\nThis warning appeared because Renux Shell detected that you are not launching it directly from the command line, but through: %1 (%2).\n\nClick on 'OK' to continue starting RS.\nClick on 'Cancel' to cancel starting RS.
RSHELL_WOUTPUT_TEXT_TO_DEBUG=Command input was canceled because output is being redirected.
RSHELL_WARNING_MSGBOX_FORMAT=%1\n\nThe window will automatically close after 5 seconds.
RSHELL_WARNING_CONSOLE_FORMAT=%1
RSHELL_INFORMATION_MSGBOX_FORMAT=%1\n\nThe window will automatically close after 5 seconds.
RSHELL_INFORMATION_CONSOLE_FORMAT=[#] %1
RSHELL_ERROR_MSGBOX_FORMAT=%1\n\nDo you want to continue executing the script?
RSHELL_ERROR_CONSOLE_FORMAT=ERROR: %1
RSHELL_QUESTION_CONSOLE_FORMAT=[?] %1
RSHELL_PROGRESS_CONSOLE_FORMAT=[~] %1
RSHELL_DOWNLOADER_FILE_EXIST=There is already a file in this path. Delete it first.
RSHELL_DOWNLOADER_GETTING_INFO=Receiving the information...
RSHELL_DOWNLOADER_INFO_GET_ERR=could not be identified
RSHELL_DOWNLOADER_QUESTION_DOWNLOAD=Renux Shell wants to download file %1. Size: %2. [Y/N]
RSHELL_DOWNLOADER_BYTE_WORD=byte
RSHELL_DOWNLOADER_ATTEMPT=An attempt to download a file from the Internet: %1...
RSHELL_DOWNLOADER_ATTEMPT_UNSUCCESSFUL=The file %1 could not be downloaded.
RSHELL_DOWNLOADER_DOWNLOADED_INFO=Downloaded %1 of %2 for %3.
RSHELL_DOWNLOADER_FILE_CORRUPTED=The integrity of the file is compromised. Perhaps this is due to the fact that you have an unstable Internet connection.
RSHELL_DOWNLOADER_FILE_TRYAGAIN=To retry? [Y/N]
RSHELL_DOWNLOADER_DOWNLOADED_INFO_WITHOUT=Downloaded %1 for %2.
RSHELL_FILESIZE_ERROR_TEXT=Error %1
RSHELL_FILESIZE_UNABLE_EXTRACT_ERROR_TEXT=Unable to retrieve information
RSHELL_INSTALLER_DESC=Renux Shell Executable
RSHELL_INSTALLER_START_LINK=Launch Renux Shell
RSHELL_INSTALLER_FAIL_SETUP=Failed to start the new version of the program with the installation order.\n\nRenux Shell rolled back the update, therefore, you will have the same version of the program that was installed before installing this one.\n\nTry to try to update the program again later.
RSHELL_LAUNCHER_INVALID_NAME=You did not provide a program name.
RSHELL_LAUNCHER_NOT_FINDED=The program %1 was not found.
RSHELL_LAUNCHER_INIT_START=Initializing startup...
RSHELL_LAUNCHER_CHECKING_UPDATES=Checking for New Updates...
RSHELL_LAUNCHER_UNABLE_GET_INFO=Failed to get information from the server.\n\nClick OK to continue running the program without checking for updates.
RSHELL_LAUNCHER_UPDATING_PREFIX=Updating the
RSHELL_LAUNCHER_UPDATING_PREFIX_FILE_CORRUPTED=The file is damaged
RSHELL_LAUNCHER_UPDATING_PREFIX_PROCESS=Updating the
RSHELL_LAUNCHER_STARTING=The application is starting ...
RSHELL_LAUNCHER_START_FAIL=Failed to start file app.exe: %1
RSHELL_LAUNCHER_ATTEMPT_WORD=Attempt
RSHELL_EULA_CHECKBOX_TEXT1=I agree with the user agreement.
RSHELL_EULA_TITLE=Terms of use
RSHELL_EULA_BUTTON_NEXT=Continue
RSHELL_FROM_UPDATING_TEXT=The program has been successfully updated.\n
RSHELL_DEBUG_MODE_ENABLED_TEXT=Debug mode is activated.\n
RSHELL_FIRST_START_TEXT=You have launched Renux Shell for the first time. The program has allocated itself a folder along the path: %1.\n
RSHELL_WARNING_OSVER_NOT_10=Your Windows kernel version does not match Windows 10. You may have changed the compatibility settings of the program. \nRenux Shell uses some system components that exist and work only in Windows 10.\n
RSHELL_WARNING_ANOTHER_VER=It has been detected that you are using a different version of the program.\nPlease install it so that files with the *.rs extension will open with the new functions that are introduced in this version.\nUse 'console update' with administrator rights to install this version on a Windows system.
RSHELL_START_PROG_WITH_LINK_ON_DESKTOP=Please run Renux Shell from your desktop shortcut.\nPress Y to create a new desktop shortcut; N - do not create.
RSHELL_LINK_SUCCESSFUL_CREATED=The shortcut was created successfully.
RSHELL_REINSTALL_PROGRAM_TEXT=Please reinstall the program. Use the 'console install' command with administrator rights.
RSHELL_START_CMD_EXECUTED_TO_DEBUG=The command has completed.
RSHELL_UNABLE_TO_GET_SERVER_INFO=Could not determine the newest version/reference of the Renux Shell.
RSHELL_RELEASED_NEW_VERSION=There is a new version of Renux Shell available (%1). The current version is %2.\nRenux Shell can update itself automatically. Update? Y - yes; N - no.\n
RSHELL_PROCESS_OF_UPDATING=Updating...
RSHELL_RELEASED_NEW_VERSION_BUT_NOT_INSTALLED=There is a new version of Renux Shell available (%1). The current version is %2.\nTo install a new version in automatic mode, you need to install the program.\nRenux can automatically install and update. Install? [Y/N]\n
RSHELL_UNABLE_TO_CHECK_ACTUAL_VERSION=Failed to check for new updates.
RSHELL_COMPLETE_TUTORIAL=%1, complete the tutorial so you can get the most out of this console quickly and efficiently. Use the LEARN command.\n
RSHELL_CMD_NOT_EXIST_IN_DOCS=This command is not available in the Help.
RSHELL_CONHOST_KILLED=The connection to the console window has been lost. A new console (current) has been created.\n
RSHELL_TO_ANALYSING_DEBUG=Parse a batch file and write to memory...
RSHELL_UNABLE_OPEN_DOCUMENTATION_ASYNC=Failed to open help asynchronously.
RSHELL_ARRAY_TOTALLY_WORD=total
RSHELL_LOCALIZED_WORD_MS=ms
RSHELL_ADMINISTRATOR_WORD=Administator
RSHELL_EXECUTED_OTHER_LANG=The language is automatically changed to be compatible with the command (only in this session using the Renux Shell).
RSHELL_DOCUMENTATION_WINDOW_TITLE=Renux Shell Program Guide
RSHELL_TV_START=Beginning of work
RSHELL_TV_START_INFO=Introduction
RSHELL_TV_START_TUTORIAL=Tutorial
RSHELL_TV_VAR=Built-in variables
RSHELL_TV_MAIN=The main
RSHELL_TV_MAIN_HOTKEYS=Hotkeys
RSHELL_TV_MAIN_MACROCOMMANDS=Creating a keyboard and mouse macro
RSHELL_TV_MAIN_KEYLIST=List of keys and mouse buttons
RSHELL_TV_MAIN_SCRIPTS=Batch files
RSHELL_TV_MAIN_VARIABLES=Variables
RSHELL_TV_ADDONS=Addons
RSHELL_TV_ADDONS_QUICKSTART=Introduction
RSHELL_TV_ADDONS_CREATING=Addon creation
RSHELL_TV_ADDONS_COMPILING=Build addon
RSHELL_TV_ADDONS_DELETE=Removing an addon
RSHELL_TV_CMDS=Command List
RSHELL_TV_CMDS_CONSOLE=Working with the console
RSHELL_TV_CMDS_CNSTCT=Control constructs
RSHELL_TV_CMDS_KEYBOARD=Keyboard control
RSHELL_TV_CMDS_MOUSE=Mouse control
RSHELL_TV_CMDS_DIALOG=Dialog boxes
RSHELL_TV_CMDS_REG=Registry management
RSHELL_TV_CMDS_STRINGS=Working with strings
RSHELL_TV_CMDS_PROCESSES=Process management
RSHELL_TV_CMDS_SOUND=Sound control
RSHELL_TV_CMDS_DISPLAY=Working with the screen
RSHELL_TV_CMDS_WIN=Working with windows
RSHELL_TV_CMDS_WIN_ELEM=Working with window elements
RSHELL_TV_CMDS_DIR=Directives
RSHELL_TV_CMDS_VOICESP=Speech synthesizer
RSHELL_TV_CMDS_NETWORK=Network
RSHELL_TV_CMDS_FILE=File system
RSHELL_TV_CMDS_FILE_ATTR=Working with attributes
RSHELL_TV_CMDS_ENV=Environment control
RSHELL_TV_ABOUTPROG=About the program
RSHELL_TV_UPDATELIST=Update List
RSHELL_TV_UPDATELIST_WORD_VERSION=Version
RSHELL_TV_UPDATELIST_WORD_FROM=from
RSHELL_TV_ABOUTPROG_TEXT=Information about the program
RSHELL_ABOUTPROG_TEXT_1=Command line Renux Shell.\nVersion %1.
RSHELL_ABOUTPROG_WORD_DEVELOPED=Developed by
RSHELL_ABOUTPROG_TEXT_2=Multifunctional command line in Russian "Renux Shell", allows you to automate almost any action in one click.\nHas functionality developed specifically for batch files.\nIn this version, %1 commands are available, excluding hidden ones.
RSHELL_ABOUTPROG_WINDOW_TITLE=Renux Shell: information
RSHELL_ABOUTPROG_BUTTON_CLOSE=Close
RSHELL_COMMAND_NAME_DOWNLOADWITHOUTASK=#DOWNLOAD_WITHOUT_DEMAND
RSHELL_COMMAND_NAME_END=END
RSHELL_COMMAND_NAME_DOCUMENTATION=HELP
RSHELL_COMMAND_NAME_PROGRAM=PROGRAM
RSHELL_COMMAND_NAME_ADDON=ADDON
RSHELL_COMMAND_NAME_ADZ=ABS
RSHELL_COMMAND_NAME_ADMIN=ADMIN
RSHELL_COMMAND_NAME_UPDATELIST=UPDATELIST
RSHELL_COMMAND_NAME_ASYNC=ASYNC
RSHELL_COMMAND_NAME_INPUT=INPUT
RSHELL_COMMAND_NAME_OUTPUT=OUTPUT
RSHELL_COMMAND_NAME_OUTPUTL=OUTPUTWL
RSHELL_COMMAND_NAME_OUTCON=OUTPUTCONSOLE || OC
RSHELL_COMMAND_NAME_TITLE=TITLE
RSHELL_COMMAND_NAME_WOUTPUT=WOUTPUT
RSHELL_COMMAND_NAME_INFO=INFORMATION || INFO
RSHELL_COMMAND_NAME_CONSOLE=CONSOLE
RSHELL_COMMAND_NAME_TUTORIAL=LEARN
RSHELL_COMMAND_NAME_PAUSE=PAUSE
RSHELL_COMMAND_NAME_TRANSPARENT=TRANSPARENT
RSHELL_COMMAND_NAME_DO=DO
RSHELL_COMMAND_NAME_SVC=SERVICES
RSHELL_COMMAND_NAME_COMPILE=BUILD
RSHELL_COMMAND_NAME_CMDLIST=CMDLIST
RSHELL_COMMAND_NAME_DOCS=HELP || ?
RSHELL_COMMAND_NAME_LABEL=LABEL
RSHELL_COMMAND_NAME_GOTO=GOTO
RSHELL_COMMAND_NAME_FUNC=FUNC
RSHELL_COMMAND_NAME_KEYBOARD_INPUT=INPUTK
RSHELL_COMMAND_NAME_HKEYS=HKEYS
RSHELL_COMMAND_NAME_WRITE=WRITE
RSHELL_COMMAND_NAME_WRITEF=WRITEF
RSHELL_COMMAND_NAME_MOUSE_MOVE=MOUSE.MOVE
RSHELL_COMMAND_NAME_REG_WRITE=REG.WRITE
RSHELL_COMMAND_NAME_REG_READ=REG.READ
RSHELL_COMMAND_NAME_REG_DELETE=REG.DELETE
RSHELL_COMMAND_NAME_DIALOG_INPUTBOX=INPUT.BOX
RSHELL_COMMAND_NAME_MSGBOX=MSGBOX
RSHELL_COMMAND_NAME_JSON=JSON
RSHELL_COMMAND_NAME_ARR_UNIT=ARRAY.UNIT
RSHELL_COMMAND_NAME_VAR=VAR
RSHELL_COMMAND_NAME_STRING_UNUNIT=STRING.UNUNIT
RSHELL_COMMAND_NAME_STRING_REPLACE=STRING.REPLACE
RSHELL_COMMAND_NAME_EXIT=EXIT
RSHELL_COMMAND_NAME_WAIT_TIME=WAIT.TIME
RSHELL_COMMAND_NAME_WAIT_KEY=WAIT.KEY
RSHELL_COMMAND_NAME_CMD=CMD
RSHELL_COMMAND_NAME_PROCESS=PROCESS
RSHELL_COMMAND_NAME_PROCESS_SEARCH=PROCESS.SEARCH
RSHELL_COMMAND_NAME_POWERSHELL=PSH
RSHELL_COMMAND_NAME_RANDOM=RANDOM
RSHELL_COMMAND_NAME_RESTART=RESTART
RSHELL_COMMAND_NAME_SESSION=SHUTDOWN
RSHELL_COMMAND_NAME_SOUND_SET=SOUND.SET
RSHELL_COMMAND_NAME_SOUND_BEEP=SOUND.BEEP
RSHELL_COMMAND_NAME_SOUND_GET=SOUND.GET
RSHELL_COMMAND_NAME_SOUND_PLAY=SOUND.PLAY
RSHELL_COMMAND_NAME_DISPLAY=DISPLAY
RSHELL_COMMAND_NAME_TOOLTIP=TOOLTIP
RSHELL_COMMAND_NAME_SCREENSHOT=SCREENSHOT
RSHELL_COMMAND_NAME_STEXTON=SPLASHTEXTON
RSHELL_COMMAND_NAME_STEXTOFF=SPLASHTEXTOFF
RSHELL_COMMAND_NAME_TRAYTIP=TRAYTIP
RSHELL_COMMAND_NAME_BRIGHTNESS=BRIGHTNESS
RSHELL_COMMAND_NAME_WIN_ELEM=WIN.ELEM
RSHELL_COMMAND_NAME_WIN_ELEM_MOVE=WIN.ELEM.MOVE
RSHELL_COMMAND_NAME_WIN_ELEM_VALUE=WIN.ELEM.VALUE
RSHELL_COMMAND_NAME_WIN_ELEM_WRITE=WIN.ELEM.WRITE
RSHELL_COMMAND_NAME_WIN_WAIT=WIN.WAIT
RSHELL_COMMAND_NAME_WIN_WAIT_ACTIVE=WIN.WAIT.ACTIVE
RSHELL_COMMAND_NAME_WIN_WAIT_DEACTIVE=WIN.WAIT.DEACTIVE
RSHELL_COMMAND_NAME_WIN_WAIT_CLOSE=WIN.WAIT.CLOSE
RSHELL_COMMAND_NAME_WIN_ACTIVATE=WIN.ACTIVATE
RSHELL_COMMAND_NAME_WIN_RESTORE=WIN.RESTORE
RSHELL_COMMAND_NAME_WIN_TITLE=WIN.TITLE
RSHELL_COMMAND_NAME_WIN_CLOSE=WIN.CLOSE
RSHELL_COMMAND_NAME_WIN_SHOW=WIN.SHOW
RSHELL_COMMAND_NAME_WIN_MAXIMIZE=WIN.MAXIMIZE
RSHELL_COMMAND_NAME_WIN_MINIMIZE=WIN.MINIMIZE
RSHELL_COMMAND_NAME_WIN_HIDE=WIN.HIDE
RSHELL_COMMAND_NAME_VOICESP_VOLUME=VOICESP.VOLUME
RSHELL_COMMAND_NAME_VOICESP_SAY=VOICESP.SAY
RSHELL_COMMAND_NAME_VOICESP_SPEED=VOICESP.SPEED
RSHELL_COMMAND_NAME_VKAPI=VKAPI
RSHELL_COMMAND_NAME_VKAPI_RESET=VKAPI.
RSHELL_COMMAND_NAME_REQUEST=REQUEST
RSHELL_COMMAND_NAME_POST=POST
RSHELL_COMMAND_NAME_CREATEFORMDATA=CREATEFORMDATA
RSHELL_COMMAND_NAME_NETWORK_SCAN=NETWORK.SCAN
RSHELL_COMMAND_NAME_ATTR_GET=ATTR.GET
RSHELL_COMMAND_NAME_ATTR_SET=ATTR.SET
RSHELL_COMMAND_NAME_CD=CD
RSHELL_COMMAND_NAME_CD_DOT=CD. / CD.. / CD...
RSHELL_COMMAND_NAME_DIR=DIR
RSHELL_COMMAND_NAME_DRIVE=DRIVE
RSHELL_COMMAND_NAME_DRIVE_GET=DRIVE.GET
RSHELL_COMMAND_NAME_DRIVE_GET_MEMORY=DRIVE.GET.MEMORY
RSHELL_COMMAND_NAME_INI_WRITE=INI.WRITE
RSHELL_COMMAND_NAME_INI_READ=INI.READ
RSHELL_COMMAND_NAME_INI_DELETE=INI.DELETE
RSHELL_COMMAND_NAME_ENC_BASE64=ENCODE.BASE64
RSHELL_COMMAND_NAME_RECYCLE=RECYCLE
RSHELL_COMMAND_NAME_RECYCLE_EMPTY=RECYCLE.EMPTY
RSHELL_COMMAND_NAME_PROG=PROG
RSHELL_COMMAND_NAME_DOWNLOAD=DOWNLOAD
RSHELL_COMMAND_NAME_FILE_TIME_SET=FILE.TIME.SET
RSHELL_COMMAND_NAME_FILE_TIME_GET=FILE.TIME.GET
RSHELL_COMMAND_NAME_FILE_WRITE_RAW=FILE.WRITE.RAW
RSHELL_COMMAND_NAME_FILE_SEARCH=FILE.SEARCH
RSHELL_COMMAND_NAME_FILE_ENCODING=FILE.ENCODING
RSHELL_COMMAND_NAME_FILE_MOVE=FILE.MOVE
RSHELL_COMMAND_NAME_FILE_MOVE_DIR=FILE.MOVE.DIR
RSHELL_COMMAND_NAME_FILE_GET=FILE.GET
RSHELL_COMMAND_NAME_FILE_ADD_LABEL=FILE.ADD.LABEL
RSHELL_COMMAND_NAME_FILE_GET_LABEL=FILE.GET.LABEL
RSHELL_COMMAND_NAME_FILE_READ=FILE.READ
RSHELL_COMMAND_NAME_FILE_READ_RAW=FILE.READ.RAW
RSHELL_COMMAND_NAME_FILE_READ_LINE=FILE.READ.LINE
RSHELL_COMMAND_NAME_FILE_APPEND=FILE.APPEND
RSHELL_COMMAND_NAME_FILE_CREATE_DIR=FILE.CREATE.DIR
RSHELL_COMMAND_NAME_FILE_DELETE=FILE.DELETE
RSHELL_COMMAND_NAME_FILE_DELETE_DIR=FILE.DELETE.DIR
RSHELL_COMMAND_NAME_FILE_COPY=FILE.COPY
RSHELL_COMMAND_NAME_FILE_COPY_DIR=FILE.COPY.DIR
RSHELL_COMMAND_NAME_FILE_SIZE=FILE.SIZE
RSHELL_COMMAND_NAME_FILE_OUTPUT=OUTPUTF
RSHELL_COMMAND_NAME_ENV_UPDATE=ENV.UPDATE
RSHELL_COMMAND_NAME_ENV_SET=ENV.SET
RSHELL_COMMAND_NAME_ENV_GET=ENV.GET
RSHELL_COMMAND_NAME_HIDED_IF=IF
RSHELL_COMMAND_NAME_HIDED_LOOP=LOOP
RSHELL_COMMAND_NAME_HIDED_FORLOOP=FOR
RSHELL_DOCS_START_INTRO=Renux Shell - it is a free, closed-source Windows utility.\nYou can automate almost everything with a keystroke or mouse click.\nGetting started might be easier than you think. Read the "Tutorial" section.
RSHELL_LEARN_TEXT_PREFIX_LEARN_WORD=Tutorial
RSHELL_LEARN_TEXT_TITLE=Renux Shell Tutorial
RSHELL_LEARN_TEXT_SUBTITLE=After completing this training, you will learn how to work in Renux Shell. Here you can study theory and try yourself in practice.
RSHELL_LEARN_TEXT_BUTTON_NEXT=Next
RSHELL_LEARN_TEXT_PAGE_1=Renux Shell is a multifunctional command line in Russian and commands. You will be able to manage the file system, send requests to the Internet, create reactions when pressing hot keys, change system settings, simulate keystrokes and mouse buttons, work with windows and their elements, work with system processes, display dialog boxes and that's not all. ... The program can execute batch files that are written in the language of this command line.
RSHELL_LEARN_TEXT_PAGE_2=Initially, the program is in portable mode (one *.exe file), however, this blocks some of its capabilities. You can completely install Renux Shell on your computer using the "console install" command, and also uninstall it using the "console uninstall" command. During installation, the program adds itself to environment variables and creates shortcuts on the desktop and in the Start menu. This way, you can execute Renux Shell commands directly from the Windows command line.
RSHELL_LEARN_TEXT_FIRST_STEPS=First steps
RSHELL_LEARN_TEXT_PAGE_3=Like all programming languages, Renux Shell has its own command syntax, which is somewhat similar to the usual Windows command line. It is not very difficult. In order for the program to understand what is required of it, it has built-in commands, and these very commands take "parameters". Each command has a different number of parameters it accepts. Also, parameters are most often referred to as arguments. You can print messages to the console using the "OUTPUT" and "OUTPUTWL" commands (the last version of the command differs only in that there is no new line after the text).
RSHELL_LEARN_TEXT_SYNTAX_AND_FIRST_COMMANDS=Syntax and first commands
RSHELL_LEARN_TEXT_PAGE_4=Let's try to display the message "Hello world". Write the command "output Hello world" in the box below.
RSHELL_LEARN_TEXT_NEED_TEXT_4=output Hello world
RSHELL_LEARN_TEXT_IF_WRITED=Great, now let's try to execute this command in the console. Click on the "Next" button.
RSHELL_LEARN_TEXT_FIRST_COMMANDS=First commands
RSHELL_LEARN_TEXT_PROCESS_CMD=Executing command "%1" ...
RSHELL_LEARN_TEXT_SYNTAX_FEATURES_1=Syntax Features (1/4)
RSHELL_LEARN_TEXT_PAGE_5=If the command accepts only one parameter, then you do not need to specify it in quotes, since they will be included in this parameter with it.\n\nIf the command accepts several parameters (more than one), then single or double parameters are used as a "separator" quotes. If the parameter consists of one word, then it is not necessary to put quotation marks on both sides of it.
RSHELL_LEARN_TEXT_SYNTAX_FEATURES_2=Syntax features (2/4)
RSHELL_LEARN_TEXT_PAGE_6=Example with a command that accepts only one parameter:\noutput This command accepts one parameter, no quotes are required.\n\nAn example with a command that accepts multiple parameters (they are separated by double quotes):\nprocess "close" "explorer.exe"
RSHELL_LEARN_TEXT_SYNTAX_FEATURES_3=Syntax features (3/4)
RSHELL_LEARN_TEXT_PAGE_7=Example with a command that takes multiple parameters (separated by single quotes):\nprocess 'close' 'explorer.exe'\n\nExample with a command that takes multiple parameters (separated by single and double quotes):\nprocess "close' 'explorer.exe"
RSHELL_LEARN_TEXT_SYNTAX_FEATURES_4=Syntax features (4/4)
RSHELL_LEARN_TEXT_PAGE_8=Example with a command that takes several parameters (separated by spaces):\nprocess close explorer.exe
RSHELL_LEARN_TEXT_SYNTAX_PRACTICE=Syntax practice
RSHELL_LEARN_TEXT_PAGE_9=You can clearly see how commands with one parameter are processed.
RSHELL_LEARN_TEXT_PAGE_9_SUBTITLE_FORMAT=Command - %1\nParameter - %2
RSHELL_LEARN_TEXT_AUTOWRITE_PAGE_9=command text
RSHELL_LEARN_TEXT_PAGE_10=You can clearly see how commands with 10 parameters are processed. The processed information is indicated in the tooltip under the mouse cursor.
RSHELL_LEARN_TEXT_FORMAT_TOOLTIP=Command: %1.\n1st parameter: %2.\n2nd parameter: %3.\n3rd parameter: %4.\n4th parameter: %5.\n5th parameter: %6.\n6th parameter: %7.\n7th parameter: %8.\n8th parameter: %9.\n9th parameter: %10.\n10th parameter: %11.
RSHELL_LEARN_TEXT_PAGE_11=You can see a list of all available commands in this version in the console or interface view. To open the list of commands in the console, write the command "CMDLIST". To open a list of commands and help, use HELP. The help contains detailed information on how to use the command you are interested in correctly. Also, in the help you can see the list of built-in variables, update lists.
RSHELL_LEARN_TEXT_USAGE_TEXT=Usage guide
RSHELL_LEARN_TEXT_BUILTIN_VARS_1=Built-in Variables (1/2)
RSHELL_LEARN_TEXT_BUILTIN_VARS_2=Built-in Variables (2/2)
RSHELL_LEARN_TEXT_PAGE_12=Variables are chunks of memory where values are stored. The value (or string as it is sometimes called) can be any sequence of characters or numbers. Although no distinction is made between text and numbers (both are stored as strings), in some contexts the treatment of a string that is entirely composed of numbers differs from the treatment of other strings. All variables are global. In addition, variables are not declared explicitly, but appear automatically. The example below shows how to assign a value to a variable:\nvar MyVariable = 123abv
RSHELL_LEARN_TEXT_PAGE_13=To later retrieve the contents of this variable, reference it by placing its name between the percent signs:\nmsgbox "" "" 'The value of MyVariable is %MyVariable%.' ""\n\nPlease note that variables are sensitive to "cAsE oF LetTerS"
RSHELL_LEARN_TEXT_USEFUL_SYNTAX_FUNCTIONS=Useful syntax functions
RSHELL_LEARN_TEXT_PAGE_14=To fit two commands on one line, you can separate them with a semicolon (;). It will also be executed as if these commands were written line by line. Please note that with the commands "LABEL", "FUNCTION", the separation will not be perceived. Example:\noutput Message1; output Message 2
RSHELL_LEARN_TEXT_ESCAPE_SEQUENCES=Escape sequences
RSHELL_LEARN_TEXT_PAGE_15=The escape character is used to indicate that the character immediately following it should be interpreted differently than usual. To escape a character, you need to write a "`" character before it.\n`` - only one "`" character is displayed.\n`% - displays a percent sign forcibly.\n`; - displays the ";" character instead of line splitting.\n`n - line feed (LF).\n`t - horizontal tabulation.
RSHELL_LEARN_TEXT_PAGE_BATCH_FILES=Batch files
RSHELL_LEARN_TEXT_PAGE_16=This feature opens after installing the console via the "console install" command. You can create files with the ".rs" extension at the end, write commands to it, separating them with a new line, put the ANSI encoding (required!) And run it. The Renux Shell will open and execute these commands line by line. Separate commands have been created specifically for batch files. An integrated development environment was created by hack1exe for editing batch files. It can be set automatically via the "PROG" command.
RSHELL_LEARN_TEXT_COMMANDS_FOR_BATCH_FILES=Batch File Commands
RSHELL_LEARN_TEXT_PAGE_17=For batch files, the following commands are available - LABEL, FUNCTION, GOTO. They provide the ability to execute the same parts of the algorithm. You can read more about them in the help. To quickly open help about these commands, you can use the "LABEL?", "FUNCTION?", "GOTO?" Commands.
RSHELL_LEARN_TEXT_LOOPS_1=Loops (1/3)
RSHELL_LEARN_TEXT_PAGE_18=Loops provide the ability to repeat the execution of a command(s) several or infinitely. You can use the LABEL and GOTO commands for these operations (but this will only work in batch files). There is also an alternative - a command called "LOOP", it works everywhere. Now we will look at the "LOOP" command. Command record format:\nloop [number of repetitions]: <command or commands>\nIf you need to repeat a command an infinite number of times, you can use this record:\nloop: output This text will be output an infinite number of times.
RSHELL_LEARN_TEXT_LOOPS_2=Loops (2/3)
RSHELL_LEARN_TEXT_PAGE_19=If you need to repeat a command, for example, 10 times, you can use this entry:\nloop 10: output This text will be output 10 times.\nFor example, if you need to count to a hundred, you can use this entry:\nvar a = 0; loop 100: var a + = 1; output %a%.\nIf you are wondering why the ";" escaped: if the character is not escaped, then the execution of the "output ..." command will not refer to the loop, but will be executed after it.
RSHELL_LEARN_TEXT_LOOPS_3=Loops (3/3)
RSHELL_LEARN_TEXT_PAGE_20=Now let's look at the LABEL and GOTO commands. With the help of the "LABEL" command, we can indicate the named point in the algorithm, to which it will be possible to return using the "GOTO" command. For example, if a test label is declared, then you can go back to it and execute the commands that followed it. You can go back using the "goto test" command. Example below:\nlabel test:\noutput I'm working; output This text should now appear again.\ngoto test
RSHELL_LEARN_TEXT_ARRAY_1=Arrays (1/2)
RSHELL_LEARN_TEXT_PAGE_21=Some commands, after their execution, generate arrays in which data is stored. You can create your array using the "VAR" command. Example:\nvar array_name[its_index] = value\n\nTo retrieve the value of an array with a specific index, you also use percent signs (%), as with variables. Example with outputting a value to the console:\noutput %array_name[its_index]%\n
RSHELL_LEARN_TEXT_ARRAY_2=Arrays (2/2)
RSHELL_LEARN_TEXT_PAGE_22=You can also concatenate all elements of an array into one variable using the ARRAY.UNIT command. For example, if the array has the following values:\narray[0] == tes\narray[1] == ti\narray[2] == ng\n\nThen after combining the array you will get a variable with the value "testing".
RSHELL_LEARN_TEXT_LIST_OF_VARS_AND_ARRAYS=Viewing a List of Variables and Arrays
RSHELL_LEARN_TEXT_PAGE_23=You can see the list of declared variables and arrays by entering only one command - "VAR LIST". This opens up many possibilities for debugging your algorithm if you are writing a batch file. Also, you can use the command "ABS /DEBUG" or write the path to the batch file and specify the /DEBUG parameter after a space. This will open your batch file in debug mode, with which you can navigate the lines of the batch file and execute additional commands that were not written in the batch file.
RSHELL_LEARN_TEXT_PRACTICE_LOOPS=Practice: Loops
RSHELL_LEARN_TEXT_PAGE_24=Try writing a program that prints the word "hello" 15 times to the console.Hint:\n- The "output" command is used to output a word of text to the console.\n- The "loop" command allows you to repeat the same actions several times. In our case, you need to repeat 15 times.\nA notepad has opened in front of you, in which you need to enter commands in order to complete this practical task. In order to check the correctness of execution, just save the file.
RSHELL_LEARN_TEXT_NEED_TEXT_PAGE_24_LOW=hello
RSHELL_LEARN_TEXT_PRACTICE_LOOP_LOOP1_TOOLTIP=Test preparation...
RSHELL_LEARN_TEXT_DONT_USE_COMMENTS_IN_PRACTICE=Don't use comments in practice.
RSHELL_LEARN_TEXT_ALGORITHM_IS_EMPTY=The algorithm is empty.
RSHELL_LEARN_TEXT_WAIT_REWRITING_FILE=Please wait, overwriting %1...
RSHELL_LEARN_TEXT_PREPARING_TO_EXECUTE=Preparing for performance...
RSHELL_LEARN_TEXT_ERROR_WORD=Error
RSHELL_LEARN_TEXT_CANT_CHECK_PRACTICE=Unfortunately, it was not possible to check the practice.
RSHELL_LEARN_TEXT_WAIT_PROCESS_CHECK_ALGORITHM=Please wait, your algorithm is being verified...
RSHELL_LEARN_TEXT_LOG_IS_EMPTY=The log is empty.
RSHELL_LEARN_TEXT_ERROR_PAGE_24_1=You have displayed the "hello" message 15 times, but you did not use the "LOOP" command. Please use it.
RSHELL_LEARN_TEXT_COMPLETE_PAGE_24=You have done the job right.
RSHELL_LEARN_TEXT_ERROR_PAGE_24_2=You need to print the "hello" message to the console 15 times. Try again.
RSHELL_LEARN_TEXT_FORLOOP_1=For-Loop (1/2)
RSHELL_LEARN_TEXT_PAGE_25=The "FOR" command works in much the same way as "LOOP", but instead of just repeating the steps, this command: repeats the command you specified once for each key-value pair in the array. For example, if the array contains:\n"array[0]" contains "hello"\n"array[1]" contains "world"\n"array[login]" contains "admin"\n"array[password]" contains "password"
RSHELL_LEARN_TEXT_FORLOOP_2=For-Loop (2/2)
RSHELL_LEARN_TEXT_PAGE_26=Thanks to the "FOR" command, you can display all the [keys] and values in the array. Command format:\n\nfor <name of the variable to which the key will be written> <name of the variable to which the value will be written> in <array name> do <commands>\n\nFor example, we can display all keys with their values using this entry:\nfor key value into array do output %key% == %value%
RSHELL_LEARN_TEXT_PRACTICE_FORLOOP=Practice: For-Loop
RSHELL_LEARN_TEXT_PAGE_27=Try to write a program that will print all keys and their values in an array "array".
RSHELL_LEARN_TEXT_FORLOOP_NAME_OF_ARRAY=array
RSHELL_LEARN_TEXT_FORLOOP_TOOLTIP_1_NEED_WRITE=for
RSHELL_LEARN_TEXT_FORLOOP_TOOLTIP_1_TEXT=Your thoughts are on the right track. Additional criterion:\n- In the "for" command, use the "k" variable to display the array key.\n- In the "for" command, use the "v" variable to display the array value.
RSHELL_LEARN_TEXT_FORLOOP_TOOLTIP_2_NEED_WRITE=for k v in array do
RSHELL_LEARN_TEXT_FORLOOP_TOOLTIP_2_TEXT=Your thoughts are on the right track. Additional criterion:\n- Keys and values should be output to the console in the format: key == value.
RSHELL_LEARN_TEXT_FORLOOP_TOOLTIP_NEED_WRITE=for k v in array do output %k% == %v%
RSHELL_LEARN_TEXT_SUCCESSFUL_TEXT=Mission accomplished. Proceed to the next tutorial page.
RSHELL_LEARN_TEXT_PAGE_28=Let's check your algorithm, which you wrote in practice in %1 seconds ...
RSHELL_LEARN_TEXT_WAIT_EXECUTING_ALGORITHM=Waiting for algorithm execution...
RSHELL_LEARN_TEXT_COMMENTS_IN_ALORIGHM_IN_BATCH_FILES=Algorithm comments (in batch files)
RSHELL_LEARN_TEXT_PAGE_29=When you need to leave a line with an explanation in the algorithm, a comment comes to the rescue, by default it is defined by two slashes.\nIt should be noted that for commenting lines, slashes are placed only at the beginning of their lines. Example code: output This message is printed.\n// this is a comment, the Renux Shell skips this line\noutput // this message is printed to the console anyway, since the slashes must be at the beginning of the line.\n// output This message is not output since the Renux Shell thinks it is a double slash comment at the beginning of a command.
RSHELL_LEARN_TEXT_HKEYS_IN_BATCH_FILES=Hotkeys (in batch files)
RSHELL_LEARN_TEXT_PAGE_30=With the Renux Shell you can create your own macros. Before the colon, "hk" is indicated, then a key or key combination separated by commas, causing the action:\nhk Alt,1:\noutput you pressed Alt,1\nwait.time 5000\nend\nAfter hot key actions, you need to specify the word "end" so that the program does not continue to execute the script further.
RSHELL_LEARN_TEXT_EMUL_KEYBOARD_IN_BATCH_FILES=Emulation of clicks (in batch files)
RSHELL_LEARN_TEXT_PAGE_31=To emulate clicks and text input, use the "write" command.\nIt has several variations: print, writef. You can read more about their differences in the help for these commands.\n// Enter a line by pressing 1\nhk 1:\nwrite Hello, how can I help you?{Enter}Text on a new line\nend
RSHELL_LEARN_TEXT_NOTES_ABOUT_VARS_1=Variable Notes (1/2)
RSHELL_LEARN_TEXT_PAGE_32=Variables are used to store and process information. In the introductory guide, we will only cover two types: numeric and text. Variables in the Renux Shell dynamically change their type based on the last assigned value. Variable name must not exceed 254 characters, can consist of letters, numbers and symbols []. Contrary to the traditions of other languages, in Renux variable names can begin with numbers and even contain Cyrillic. The logical (boolean) type is meant to store 1 or 0 (true or false). The numeric type, as you might guess, is used for operations with numbers.
RSHELL_LEARN_TEXT_NOTES_ABOUT_VARS_2=Variable Notes (2/2)
RSHELL_LEARN_TEXT_PAGE_33=Most arithmetic operations are supported, as well as decimal fractions. The string type stores individual characters or pieces of text. Working with strings is a little different from numeric and boolean variables - there are a number of special string functions for them. Ed. see the help for the command "VAR", or use the command "VAR?" in the console.
RSHELL_LEARN_TEXT_LOGIC_OPERATIONS_1=Logic operations (1/3)
RSHELL_LEARN_TEXT_PAGE_34=Surely you have already thought about how to perform an action only if a specific condition is met? The logical operator "if" comes to the rescue. There are also other commands that represent a condition. Perhaps the simplest application of a condition is to assign two alternating actions to the same hotkey. In this example, a variable has been introduced that takes on the opposite value with each new call to "HK".
RSHELL_LEARN_TEXT_LOGIC_OPERATIONS_2=Logic operations (2/3)
RSHELL_LEARN_TEXT_PAGE_35=var a = 0\nhk Alt,1:\nif '%a%' == '0' then output variable a is zero;var a = 1;end\nif '%a%' == '1' then output variable a is equal to 1; var a = 0;end
RSHELL_LEARN_TEXT_LOGIC_OPERATIONS_3=Logic operations (3/3)
RSHELL_LEARN_TEXT_PAGE_36=Another example is determining the time of day:\nhk Alt,1:\nif '%.time.hour%' < '6' then output night`;end\nif '%.time.hour%' < '10' then output morning`;end\nif '%.time.hour%' < '17' then output day`;end\noutput evening;end
RSHELL_LEARN_TEXT_RUN_PROGRAMS_AND_LINKS_1=Launching programs, opening links (1/2)
RSHELL_LEARN_TEXT_PAGE_37=There are many ways to launch EXE applications, open explorer or browser windows.\n1. A command line call from Renux is used:\n// Start the program \ncmd start notepad.exe\n// Opening a link.\ncmd http://streleckiy.ru
RSHELL_LEARN_TEXT_RUN_PROGRAMS_AND_LINKS_2=Launching programs, opening links (2/2)
RSHELL_LEARN_TEXT_PAGE_38=2. The file name and parameters are used as on the command line. In this case, RS is waiting for the process to close.\n// Start the program\nnotepad.exe\n// Open the link\nhttp://streleckiy.ru
RSHELL_LEARN_TEXT_NOTES_ABOUT_COMMANDS_AND_FUNCS_1=Notes on commands and functions (1/2)
RSHELL_LEARN_TEXT_PAGE_39=The Renux Shell has two main structures: commands and functions. Both are designed to perform an action, but differ in the way they are recorded. In this program, the function is used as a label, but the "GOTO" command is not used to call it, you just need to specify its name on the line. It should be noted that the function is not executed until it is called in the code. Example:
RSHELL_LEARN_TEXT_NOTES_ABOUT_COMMANDS_AND_FUNCS_2=Notes on commands and functions (2/2)
RSHELL_LEARN_TEXT_PAGE_40=// declare a function\nfunc plus_one:\nvar a += 1\nend\n// endless loop\nlabel loop:\nplus_one\noutput %a%\ngoto loop
RSHELL_LEARN_TEXT_CONCLUSION=Conclusion
RSHELL_LEARN_TEXT_PAGE_41=This section contains the most basic features of the program. A complete list of functions can be found on the main page of the manual ("HELP" command). We recommend that you consistently go through the description of all commands for a rough understanding of their purpose before starting to write your first script :)\nBefore you start writing the code, you need to compose an algorithm. Describe in steps what your program should do. This makes it much easier to find the commands you need to complete each step.
RSHELL_LEARN_TEXT_ERROR_TEXT1=First install Renux Shell via "CONSOLE INSTALL" command. If there are no rights, then run the program as administrator and try again.
RSHELL_LEARN_TEXT_ERROR_TEXT2=Failed to execute command.
RSHELL_VARINFO_TIME_DD=Use: %.time.day%\nDescription: The current day of the month (2 digits) 01 to 31.
RSHELL_VARINFO_TIME_MONTH=Use: %.time.month%\nDescription: Current month (2 digits) 01 to 12.
RSHELL_VARINFO_TIME_YEAR=Use: %.time.year%\nDescription: Current year (4 digits). For example: 2004.
RSHELL_VARINFO_TIME_HOUR=Use: %.time.hour%\nDescription: The current hour (2 digits) is from 00 to 23. For example: 17 is 5 pm.
RSHELL_VARINFO_TIME_MIN=Use: %.time.min%\nDescription: The current minute (2 digits) 00 to 59.
RSHELL_VARINFO_TIME_SEC=Use: %.time.sec%\nDescription: The current second (2 digits) from 00 to 59.
RSHELL_VARINFO_TIME_TICKCOUNT=Use: %.time.tickcount%\nDescription: The number of milliseconds that have passed since the computer was restarted. By storing the .time.tickcount value in a variable, you can measure the total running time later. To do this, subtract the value of this variable from the last value of .time.tickcount. For example: \n\n  var time = %.time.tickcount%\n  wait.time 1000\n  var timed = %.time.tickcount%\n  var timed -= %time%\n  output %.timed% 5 milliseconds have passed
RSHELL_VARINFO_TIME_MMM=Use: %.time.mmm%\nDescription: The abbreviation of the current month in the user's language. For example: Jul.
RSHELL_VARINFO_TIME_MMMM=Use: %.time.mmmm%\nDescription: The full name of the current month in the user's language. For example: July.
RSHELL_VARINFO_TIME_DDD=Use: %.time.ddd%\nDescription: The three-letter abbreviation for the current day of the week in the user's language.
RSHELL_VARINFO_TIME_DDDD=Use: %.time.dddd%\nDescription: The full name of the current day of the week in the user's language. For example: Sunday.
RSHELL_VARINFO_CONSOLE_VERSION=Use: %.console.version%\nDescription: The variable contains the version number of the Renux Shell that executes the commands (for example: 2.6).
RSHELL_VARINFO_CONSOLE_ADMIN=Use: %.console.admin%\nDescription: If the current user has administrator rights, the variable contains the value 1. Otherwise, 0.
RSHELL_VARINFO_CONSOLE_RESULT=Use: %.console.result%\n\nDescription: This is a built-in variable designed to indicate success or failure of any command (however, not all commands support .console.result). A .console.result of one usually indicates a successful completion of the process. The .console.result contains the response of the Renux internal function, which is responsible for executing the previous command you specified.\n\nNotes:\n  Given that some commands return a .console.result greater than 1, the best way would be: check whether the variable .console.result has a value other than one.\nIf you have restricted the rights to execute some commands in the Renux Shell, then when you try to execute a forbidden command, a message will be displayed stating that the user does not have enough rights, also .CONSOLE.RESULT will change its value to "-100" (minus one hundred).
RSHELL_VARINFO_CONSOLE_FOLDER=Use: %.console.folder%\nDescription: Displays the path to the folder that Renux Shell has selected for storing config and installation.
RSHELL_VARINFO_CONSOLE_WORKDIR=Use: %.console.workingdir%\nDescription: The current working directory of the console where the files are available by default. The trailing backslash is only needed if it is the root directory. Two examples are C:\ and C:\My Documents. Use the "CD" command to change the working directory.
RSHELL_VARINFO_CONSOLE_PATH_DIR=Use: %.console.path.dir%\nDescription: The full path to the directory where the console is located.
RSHELL_VARINFO_CONSOLE_SCRIPT=Use: %.console.script%\nDescription: The full path to the executable batch file.
RSHELL_VARINFO_CONSOLE_PATH=Use: %.console.path%\nDescription: Prints the path to the Renux Shell executable (path to itself).
RSHELL_VARINFO_CONSOLE_NAME=Use: %.console.name%\nDescription: Prints the name of the Renux Shell executable file (its filename with extension).
RSHELL_VARINFO_CONSOLE_ENV=Use: %.env.<environment variable name>%\nDescription: Prints the contents of a specific environment variable.
RSHELL_VARINFO_SYSTEM_APPDATA=Use: %.system.appdata%\nDescription: The fully qualified path and name of the folder containing the application data of the current user.
RSHELL_VARINFO_SYSTEM_CAPPDATA=Use: %.system.appdatacommon%\nDescription: The full path and name of the folder that contains data for all users of the application.
RSHELL_VARINFO_SYSTEM_DESKTOP=Use: %.system.desktop%\nDescription: The fully qualified path and name of the folder containing the desktop files of the current user.
RSHELL_VARINFO_SYSTEM_CDESKTOP=Use: %.system.desktopcommon%\nDescription: The full path and name of the folder that contains the desktop files of all users.
RSHELL_VARINFO_SYSTEM_64BITOS=Use: %.system.is64bitos%\nDescription: Contains 1 (true) if the OS is 64-bit, or 0 (false) if it is 32-bit.
RSHELL_VARINFO_SYSTEM_DOCUMENTS=Use: %.system.documents%\nDescription: The full path and name of the current user's My Documents folder.
RSHELL_VARINFO_SYSTEM_PROGFILES=Use: %.system.programfiles%\nDescription: The Program Files directory (for example, C:\Program Files or C:\Program Files (x86)).
RSHELL_VARINFO_SYSTEM_PROGRAMS=Use: %.system.programs%\nDescription: The full path and name of the Programs folder in the current user's Start menu.
RSHELL_VARINFO_SYSTEM_CPROGRAMS=Use: %.system.programscommon%\nDescription: The full path and name of the Programs folder in the Start menu for all users.
RSHELL_VARINFO_SYSTEM_STARTMENU=Use: %.system.startmenu%\nDescription: The full path and name of the current user's Start menu folder.
RSHELL_VARINFO_SYSTEM_CSTARTMENU=Use: %.system.startmenucommon%\nDescription: The full path and name of the Start menu folder for all users.
RSHELL_VARINFO_SYSTEM_STARTUP=Use: %.system.startup%\nDescription: The full path and name of the Startup folder in the current user's Start menu.
RSHELL_VARINFO_SYSTEM_CSTARTUP=Use: %.system.startupcommon%\nDescription: The full path and name of the Startup folder in the Start menu for all users.
RSHELL_VARINFO_SYSTEM_OSTYPE=Use: %.system.ostype%\nDescription: The type of operating system running. Either WIN32_WINDOWS (i.e. Win95/98/ME) or WIN32_NT (i.e. WinNT, Win2k, WinXP and possibly later).
RSHELL_VARINFO_SYSTEM_VERSION=Use: %.system.osversion%\nDescription: One of the following lines: WIN_2003, WIN_XP, WIN_2000, WIN_NT4, WIN_95, WIN_98, WIN_ME.
RSHELL_VARINFO_SYSTEM_USERNAME=Use: %.system.username%\nDescription: The name of the current user who is logged on to the system.
RSHELL_VARINFO_SYSTEM_COMPUTER=Use: %.system.computername%\nDescription: Computer network name.
RSHELL_VARINFO_SYSTEM_CLIPBOARD=Use: %.system.clipboard%\nDescription: Read/write contents of the operating system clipboard.
RSHELL_VARINFO_SCREEN_WIDTH=Use: %.screen.width%\nDescription: The width of the primary monitor in pixels (for example, 1024).
RSHELL_VARINFO_SCREEN_HEIGHT=Use: %.screen.height%\nDescription: The height of the main monitor in pixels (for example, 768).
RSHELL_VARINFO_CONSOLE_SPACE=Use: %.console.space%\nDescription: A variable equal to a space.
RSHELL_MAININFO_HOTKEYS1=Warning: only works in batch file execution mode.\n\nHotkeys are sometimes referred to as "hotkeys" because of their ability to easily activate operations (such as launching a program or a keyboard macro). In the example below, the Alt + N hotkey is configured to launch Notepad:\n\n  hk Alt,N:\n  cmd start notepad\n  end\n\nOn the last line, the "end" command is used to terminate the hotkey. You can use infinitely many keys to activate macros. They are listed separated by commas. In the example below, pressing Ctrl + Alt + T will print the message "Hello World":\n\n  hk Ctrl,Alt,T:\n  // On the next line, the keystroke emulation refers to the active window\n  write Hello World\n  end
RSHELL_MAININFO_HOTKEYS2=Hotkey labels can be used like regular labels: you can use the "goto" command and specify multiple hotkey labels to perform the same procedure. For instance:\n\n  hk Alt,1:\n  hk Alt,2:\n  output You pressed Alt + 1 or Alt + 2.\n  end\n\nYou can bind any available Renux Shell commands to a key. For example, pressing the right Ctrl key will open the active window in full screen:\n  hk RCtrl:\n  win.maximize A\n  end
RSHELL_MAININFO_CREATING_MACROCMDS_KEYBOARD_MOUSE=Creating a keyboard and mouse macro
RSHELL_MAININFO_MACROCOMMANDS=A macro is a sequence of scripted actions that "plays" on demand. The most common activity of a macro is to emulate keystrokes and mouse clicks in one or more windows. These windows respond to every keystroke and mouse click as if it were a manual action, allowing you to automate repetitive tasks with high speed and reliability.\nTo start creating your own macros and hotkeys right now, see the section on See the Beginning of work > Tutorial.
RSHELL_MAININFO_LIST_OF_KEYS_AND_MOUSE_BUTTON=List of keys and mouse buttons
RSHELL_MAININFO_LOKAMB_TEXT1=Mouse:\n> LButton - left mouse button\n> RButton - right mouse button\n> MButton - middle mouse button (or wheel)\n> WheelDown - turn the mouse wheel "down"\n> WheelUp - turn the mouse wheel "up"\n> XButton1 - fourth mouse button, side\n> XButton2 - fifth mouse button, side\n\nKeyboard:\n(( Note: The names of the alphabetic and numeric keys are exactly the same as the symbols for these keys. That is, the "b" key is written as b and the "5" key as 5. ))\n> Space\n> Tab\n> Enter (or Return)\n> Escape (or Esc)\n> Backspace (or BS)\n> Delete (or Del)\n> Insert (or Ins)\n> Home\n> End\n> PgUp\n> PgDn\n> Up\n> Down\n> Left\n> Right\n> ScrollLock\n> CapsLock\n> NumLock\n> NumpadDiv - slash "/"\n> NumpadMult - asterisk "*"\n> NumpadAdd - plus "+"\n> NumpadSub - minus "-"\n> NumpadEnter - key "Numpad-Enter"
RSHELL_MAININFO_LOKAMB_TEXT2=The following key names are used when Numlock is off:\n> NumpadDel\n> NumpadIns\n> NumpadClear - same button as Numpad5 on keyboard\n> NumpadUp\n> NumpadDown\n> NumpadLeft\n> NumpadRight\n> NumpadHome\n> NumpadEnd\n> NumpadPgUp\n> NumpadPgDn\n\nThese key names are used when Numlock is on:\n> Numpad0\n> Numpad1\n> Numpad2\n> Numpad3\n> Numpad4\n> Numpad5\n> Numpad6\n> Numpad7\n> Numpad8\n> Numpad9\n> NumpadDot
RSHELL_MAININFO_LOKAMB_TEXT3=F1 through F24 - twelve or more function keys, on most keyboards are in the topmost row.\n\n> AppsKey - key that calls the context menu of the file/program, as with the right mouse click.\n> LWin - left key "Windows"\n> RWin - right key "Windows"\n> Control (or Ctrl)\n> Alt\n> Shift\n> LControl (or LCtrl) - left "Control"\n> RControl (or RCtrl) - right "Control"\n> LShift\n> RShift\n> LAlt - left "Alt"\n> RAlt - right "Alt". Note: if your keyboard has AltGr instead of RAlt, you can use the following notation for this key: <^>! Also note that the AltGr key can be written as a keyboard shortcut "LControl & RAlt::".\n> PrintScreen\n> CtrlBreak\n> Pause\n> Break\n> Help - a rather rare key, not present on all keyboards. And it doesn't work like F1 at all.\n> Sleep - be warned that the "Sleep" key on some keyboards does not work under this entry.
RSHELL_MAININFO_LOKAMB_TEXT4=Extended function keys for Multimedia and Internet keyboards:\n> Browser_Back\n> Browser_Forward\n> Browser_Refresh\n> Browser_Stop\n> Browser_Search\n> Browser_Favorites\n> Browser_Home\n> Volume_Mute\n> Volume_Down\n> Volume_Up\n> Media_Next\n> Media_Prev\n> Media_Stop\n> Media_Play_Pause\n> Launch_Mail\n> Launch_Media\n> Launch_App1\n> Launch_App2\n\nThe SCnnn notation, where nnn is the scancode of the key, allows us to work with the rest of the keys not mentioned above.\nThe option is to write VKnn, where nn is the hexadecimal virtual key code.
RSHELL_MAININFO_SCRIPT_TEXT1=Each batch file is a simple text file that contains commands that the program (rshell.exe) will then execute. The batch file can also contain hotkeys, and even consist entirely of them. However, in the absence of hot keys, after starting the script, its commands are executed sequentially one after another from top to bottom. At startup, batch files are optimized but not checked. When creating a new batch file (creating a text file), you need to set the encoding to ANSI, otherwise the batch file may not run on your/other computer.\n\nAuto-execute section:\nProgram, line by line, loads a script into memory (each line may contain up to 16 383 characters). Once loaded, the program executes the script until it comes to end, exit, hotkey labels, or end of script (whichever comes first). This top part of the script is called the auto-execute section.\nThe non-terminating script that does not contain hotkeys automatically exits after the auto-execute section ends. Otherwise, it will run in a pending state, responding to events such as hotkeys, etc.\n\nEscape Sequences:\nIn the Renux Shell, the default escape character is the accent (`) in the upper left corner of most English keyboards. Using this character instead of a backslash eliminates the need for double backslashes in the path and filename.\nSpecial characters are also escaped. Most often they are `t (tab), `n (line feed), and `r (carriage return).
RSHELL_MAININFO_SCRIPT_TEXT2=Comments:\nIn the script, you can add comments at the beginning of a line after two slashes. For example:\n\n // This entire line is a comment.\n\nMobility rshell.exe:\nAll that is needed to run any .rs script is the rshell.exe file.
RSHELL_MAININFO_VARIABLES_TEXT1=Introduction to Variables:\nVariables are memory locations where values are stored. The value (or string as it is sometimes called) can be any sequence of characters or numbers. Although no distinction is made between text and numbers (both are stored as strings), in some contexts the treatment of a string that is entirely composed of numbers differs from the treatment of other strings. For example, if both variables are numeric in InputString> BookmarkString, they will be compared as numbers. Otherwise, the comparison will be in alphabetical order.\nThe example below shows how to assign a value to a variable:\n\n var my_variable = 123abc\n\nTo later retrieve the contents of this variable, reference it by placing its name between percent signs:\n\n output The value of my_variable is %my_variable%\n\nHowever, some command parameters are explicitly defined as input or output variables.\nIn these cases, there is no need to put the variable between the percent signs.
RSHELL_MAININFO_VARIABLES_TEXT2=Notes on Variable Capabilities and Memory Usage:\n> Each variable can hold up to 256 MB of text.\n> When a variable is assigned a string longer than its current content, additional system memory is automatically allocated.\n> Memory occupied by a large variable, can be freed by assigning an empty value to a variable, for example: var variable = \n> Commands, functions, and expressions that take numeric input typically support 15 decimal places (for floating point values). For integers, 64-bit signed values are supported, ranging from -9223372036854775808 (-0x8000000000000000) to 9223372036854775807 (0x7FFFFFFFFFFFFFFF). Any integer constant not in this range will be set to the nearest integer in the range. In contrast, with integer arithmetic, when overflowed, the number is cycled (for example, 0x7FFFFFFFFFFFFFFF + 1 = -0x8000000000000000).
RSHELL_MAININFO_VARIABLES_TEXT3=Built-in variables:\nYou can also use built-in variables in scripts. Most of them are "reserved", which means that the script cannot directly modify their contents. You can see more details about them in the "Built-in Variables" help section.
RSHELL_ADDONSINFO_QUICKSTART_TEXT=Addons allow you to create your own commands with their own execution algorithm in the Renux Shell language.\nIf there are installed addons, the Renux Shell loads them into memory.\n\nAddons consist of two files.\n*.rs is a batch file (addon algorithm).\n*.rsa is the file that registers the addon command.
RSHELL_ADDONSINFO_CREATING_TEXT1=The file that is responsible for registering add-ons has the *.rsa extension (for example, addon.rsa).\nThis file contains information about command syntax, etc.\n\nBe aware that for add-ons the standard RS argument parser is used, so each argument is written in "'" (single quotes). Exception: when a single argument is used, quotes are not required\n\nExample of file writing:\n[addon]\ncommand = check\ndescription = testing addon in Renux Shell\nsyntax = check '<text for output 1>' '<text for output 2>'\nexample = check 'one two three' 'four five six '\nparam_count = 2\noutput_array = text\nbatch_name = checking_algorithm\n\nThe string "[addon]" must be specified!\nWhere is the "command" specified the name of the command that will activate the addon.\nWhere "description" is the description of the command, if not all arguments are specified.\nWhere is "syntax", the format of the command is indicated as text, if not all arguments are specified.\nWhere is "example", is example of a command in the form of text, if not all arguments are specified.\nWhere "param_count" is the number of arguments that the command should accept.\nWhere "output_array" is the name of the array into which the arguments specified by the user will be written.\nWhere "batch_name", the file is specified without extension ia *.rs, which will be executed when all arguments are specified.
RSHELL_ADDONSINFO_CREATING_TEXT2=After the user specifies all the accepted arguments for the command, all arguments are written to the array specified in the "output_array" parameter in the *.rsa file.\n\nAn example that displays the values of two arguments specified by the user:\noutput In the first the argument was: %text[1]%\noutput The second argument was: %text[2]%\n\nAfter execution of the batch file is complete, Renux will return to normal mode.
RSHELL_ADDONSINFO_COMPILING_TEXT=When you create *.rs and *.rsa files, you can combine them into one file (extension *.rsac) and install via the "ADDON" command in the Renux Shell. You can also collect it through the "ADDON" command.
RSHELL_ADDONSINFO_DELETE_TEXT=If you need to remove an installed add-on, then use the "ADDON" command.
RSHELL_UPDINFO_2_0=- The very first version of the program.
RSHELL_UPDINFO_2_1=Not available in the current localization.
RSHELL_UPDINFO_2_2=Not available in the current localization.
RSHELL_UPDINFO_2_3=Not available in the current localization.
RSHELL_UPDINFO_2_4=Not available in the current localization.
RSHELL_UPDINFO_2_5=Not available in the current localization.
RSHELL_UPDINFO_2_6=Not available in the current localization.
RSHELL_UPDINFO_2_7=Not available in the current localization.
RSHELL_UPDINFO_2_8=Not available in the current localization.
RSHELL_UPDINFO_2_9=Not available in the current localization.
RSHELL_UPDINFO_2_9_1=Not available in the current localization.
RSHELL_UPDINFO_2_10=Not available in the current localization.
RSHELL_UPDINFO_2_11=Not available in the current localization.
RSHELL_UPDINFO_2_12=Not available in the current localization.
RSHELL_UPDINFO_2_13=Not available in the current localization.
RSHELL_UPDINFO_2_14=Not available in the current localization.
RSHELL_UPDINFO_2_15=Not available in the current localization.
RSHELL_UPDINFO_2_16=Not available in the current localization.
RSHELL_UPDINFO_2_16_1=Not available in the current localization.
RSHELL_UPDINFO_2_16_2=Not available in the current localization.
RSHELL_UPDINFO_2_16_3=Not available in the current localization.
RSHELL_UPDINFO_2_16_4=Not available in the current localization.
RSHELL_UPDINFO_2_16_5=Not available in the current localization.
RSHELL_UPDINFO_2_17=Not available in the current localization.
RSHELL_UPDINFO_2_18=Not available in the current localization.
RSHELL_FORMAT_COMMAND_DOCUMENTATION_SYNTAX_PREFIX=Syntax:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_SYNTAX_PREFIX_1=Syntax no. 1:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_SYNTAX_PREFIX_2=Syntax no. 2:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_FORMAT_PREFIX=Format:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_EXAMPLE_PREFIX=Example:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_EXAMPLES_PREFIX=Examples:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_NOTE_PREFIX=Note:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_NOTES_PREFIX=Notes:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_CONSOLE_RESULT_PREFIX=Variable .CONSOLE.RESULT:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_CONSOLE_RESULT_TEXT1=If the command is executed without errors, then the variable changes its value to "1" (one).
RSHELL_FORMAT_COMMAND_DOCUMENTATION_CONSOSE_RESULT_TEXT2=The command does not change the value of the variable / it is not advisable to use it.
RSHELL_FORMAT_COMMAND_DOCUMENTATION_CONSOLE_RESULT_TEXT3=The variable changes its value to "1" (one) in any case.
RSHELL_FORMAT_COMMAND_DOCUMENTATION_CONSOLE_RESULT_TEXT4=Assumes the value of a variable after command execution.
RSHELL_FORMAT_COMMAND_DOCUMENTATION_CONSOLE_CMD_WANT_PERMISSION_ENCHANCEMENT=The command requires elevation to administrator rights.
RSHELL_FORMAT_COMMAND_DOCUMENTATION_LAUNCH_PARAMETER_LIST_PREFIX=Launch parameter list:
RSHELL_FORMAT_COMMAND_DOCUMENTATION_PARAMETERS_PREFIX=Parameters:
RSHELL_TEXT_FILE_NOT_FINDED=The file in the specified path was not found.
RSHELL_TEXT_CANT_WRITE_FILE=Failed to write file
RSHELL_TEXT_USE_TO_VIEW_DETAILS_IN_DOCS_PREFIX=To view the documentation for a command, use:
RSHELL_TEXT_DONT_HAVE_PERMISSIONS_TO_USE_COMMAND=You do not have permission to execute this command.
RSHELL_TEXT_WORKING_ONLY_IN_BATCH_MODE=Works only in batch file execution mode.
RSHELL_TEXT_THIS_COMMAND_WORKING_ONLY_IN_BATCH_MODE=This command works only in batch file execution mode.
RSHELL_TEXT_UNKNOWN_WORD=Unknown
RSHELL_TEXT_REPLACE_WORD_OR=or
RSHELL_COMMAND_DOCUMENTATION_ADDON_SYNTAX=addon
RSHELL_COMMAND_DOCUMENTATION_ADDON_DESCRIPTION=Installs/removes/collects addons.
RSHELL_COMMAND_DOCUMENTATION_ADDON_NOTES=More details in the help: in the Addons section.
RSHELL_COMMAND_INTERNAL_ADDON_TEXT1=Welcome to Renux Shell Addon Wizard.
RSHELL_COMMAND_INTERNAL_ADDON_TEXT2=Select the operation you need:
RSHELL_COMMAND_INTERNAL_ADDON_TEXT3=Install add-ons only from trusted sources, otherwise your system may be infected with a virus.
RSHELL_COMMAND_INTERNAL_ADDON_TEXT4=List of addons:
RSHELL_COMMAND_INTERNAL_ADDON_TEXT5=No addon with this name was found.
RSHELL_COMMAND_INTERNAL_ADDON_TEXT6=The addon has been removed.
RSHELL_COMMAND_INTERNAL_ADDON_ACTION_INSTALL=install addon
RSHELL_COMMAND_INTERNAL_ADDON_ACTION_UNINSTALL=remove addon
RSHELL_COMMAND_INTERNAL_ADDON_ACTION_COMPILE=build addon
RSHELL_COMMAND_INTERNAL_ADDON_ACTION_EXIT=exit
RSHELL_COMMAND_INTERNAL_ADDON_ACTION_DELETE_BY_FILE_NAME=Specify the name of the addon file to remove
RSHELL_COMMAND_INTERNAL_ADDON_ACTION_ENTER_PATH_TO_FUTURE_FILE=Specify the path to the future file (without extension), into which the assembled addon will be written
RSHELL_COMMAND_INTERNAL_ADDON_ENTER_PATH_TO_FILE=Specify the path to the file
RSHELL_COMMAND_INTERNAL_ADDON_SUCCESSFUL_COMPILED=Addon compiled and saved along path %1.
RSHELL_COMMAND_INTERNAL_ADDON_TEXT7=A maximum of 15 parameters are supported.
RSHELL_COMMAND_INTERNAL_ADDON_TEXT8=The file %1 was not found.
RSHELL_COMMAND_INTERNAL_ADDON_TEXT9_PREFIX=Uploaded addon:
RSHELL_COMMAND_DOCUMENTATION_SHUTDOWN_SYNTAX=shutdown <code>
RSHELL_COMMAND_DOCUMENTATION_SHUTDOWN_DESCRIPTION=Shutdown/logout etc.\n\nFlags (code):\n0 = logout\n1 = shutdown\n2 = restart\n3 = force\n4 = turn off\n5 = blue screen of death\n0 = cancel scheduled shutdown
RSHELL_COMMAND_DOCUMENTATION_SHUTDOWN_NOTES=Force (3) forces all open applications to close. It should only be used in an emergency, as it could result in data loss for any open applications.\nhe value "shutdown" (4) shuts down the system and power off.\nThe value "blue screen of death (5)" causes a blue screen of death, by the method of terminating the system process. This can result in data loss for any open applications.
RSHELL_COMMAND_DOCUMENTATION_SHUTDOWN_EXAMPLE=shutdown 1
RSHELL_COMMAND_DOCUMENTATION_LABEL_SYNTAX=label <label name>:
RSHELL_COMMAND_DOCUMENTATION_LABEL_DESCRIPTION=The symbolic name to which the branch should normally be.
RSHELL_COMMAND_DOCUMENTATION_LABEL_EXAMPLE=// To count the number of times of activation\n  var a = 1\n  \n  // Declaring a label named "best_label_in_world".\n  label best_label_in_world:\n  \n  // We display the text that the label was activated\n  output Activation of a label named "best_label_in_world" (no. %a%)\n  \n  // Add a unit to the variable "a".\n  var a += 1\n  \n  // We go to the label "best_label_in_world"\n  goto best_label_in_the_world
RSHELL_COMMAND_DOCUMENTATION_LABEL_TEXT1=A label with this name could not be created (#FV).
RSHELL_COMMAND_DOCUMENTATION_LABEL_TEXT2=A label with this name cannot be created (#%1).
RSHELL_COMMAND_DOCUMENTATION_LABEL_TEXT3=Label %1#%2 is registered in process memory.
RSHELL_COMMAND_DOCUMENTATION_HKEYS_SYNTAX=hk <key / keys>:
RSHELL_COMMAND_DOCUMENTATION_HKEYS_DESCRIPTION=Represents a label (as in the LABEL command) that activates its execution when certain keys are pressed.
RSHELL_COMMAND_DOCUMENTATION_HKEYS_TEXT1=With the Renux Shell you can create your own macros. Before a colon, "HK" is indicated, then a key or a comma-separated key combination that causes an action. After the actions of the hotkey, you need to specify the word "END" so that the program does not continue to execute the script further.
RSHELL_COMMAND_DOCUMENTATION_HKEYS_TEXT2=PLEASE NOTE: if you want to terminate the execution of the script, leaving Renux in the waiting mode for pressing the following hotkeys, then use the "END" command.
RSHELL_COMMAND_DOCUMENTATION_HKEYS_EXAMPLE=hk Alt,1:\n  output You pressed Alt,1\n  wait.time 5000\n  end
RSHELL_COMMAND_INTERNAL_HKEYS_TEXT1=Hotkey %1#%2 is registered in process memory.
RSHELL_COMMAND_DOCUMENTATION_END_SYNTAX=end
RSHELL_COMMAND_DOCUMENTATION_END_DESCRIPTION=Stops the execution of a macro.
RSHELL_COMMAND_DOCUMENTATION_END_EXAMPLE=hk Alt,1:\n  output hotkey Alt + 1 pressed\n  end\n  output This line is not output.
RSHELL_COMMAND_INTERNAL_END_TEXT1=Function %1 is registered in process memory.
RSHELL_COMMAND_DOCUMENTATION_GOTO_SYNTAX=goto <label name>
RSHELL_COMMAND_DOCUMENTATION_GOTO_DESCRIPTION=Unconditional jump to a specific point in the script, indicated by a label.
RSHELL_COMMAND_DOCUMENTATION_GOTO_EXAMPLE=// To count the number of times of activation\n  var a = 1\n\n  // Declaring a label named "best_label_in_world".\n  label best_label_in_world:\n\n  // We display the text that the label was activated\n  output Activation of a label named "best_label_in_world" (no. %a%)\n\n  // Add a unit to the variable "a".\n  var a += 1\n\n  // We go to the label "best_label_in_world"\n  goto best_label_in_world
RSHELL_COMMAND_DOCUMENTATION_GOTO_TEXT1=Label %1 was not found.
RSHELL_COMMAND_DOCUMENTATION_GOTO_TEXT2=The transition to %1 was successful.
RSHELL_COMMAND_INTERNAL_INFORMATION_TEXT=Renux Shell (command line) version %1\nWarning: This is a beta version of the language. It's still in development.
RSHELL_COMMAND_INTERNAL_INFORMATION_TEXT_TO_DEBUG_PREFIX=Information about the latest version (on the server):
RSHELL_COMMAND_INTERNAL_INFORMATION_TEXT_BETA=Tshhh... don't tell anyone about what's in the new update.
RSHELL_COMMAND_DOCUMENTATION_INFORMATION_DESCRIPTION=Displays information about the Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_INFORMATION_EXAMPLE=information
RSHELL_COMMAND_DOCUMENTATION_INFORMATION_SYNTAX1=information
RSHELL_COMMAND_DOCUMENTATION_INFORMATION_SYNTAX2=info
RSHELL_COMMAND_DOCUMENTATION_CONSOLE_DESCRIPTION=Renux Shell installer to install / uninstall Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_CONSOLE_SYNTAX=console <command>
RSHELL_COMMAND_DOCUMENTATION_CONSOLE_PARAMS=install - installs Renux Shell on your PC.\nuninstall - removes Renux Shell from your PC.\nupdate - automatically applies the current version of Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_CONSOLE_EXAMPLES=console install\n console uninstall\n console update
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT1=UPDATE
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT2=Renux Shell is not installed.
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT3_PREFIX=The version of the program to be installed:
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT4_PREFIX=Copying a file
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT5=Re-registering the *.rs extension in the system registry...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT6=Re-registering Renux Shell in the system registry...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT7=Renux Shell Executable
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT8=Creating a shortcut on the desktop...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT9=Adding a shortcut to the Start menu...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT10=The update is complete. A shortcut to the program appeared on the desktop. Start Renux Shell with it.
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT11=INSTALL
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT12=You have already installed Renux Shell.
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT13=Registering the *.rs extension in the system registry ...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT14=Launch Renux Shell
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT15=Registering Renux Shell in the System Registry...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT16=Adding to environment variables (PATH variable)...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT17=Installation completed. A shortcut to the program appeared on the desktop. Start Renux Shell with it.
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT18=UNINSTALL
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT19=You haven't installed Renux Shell yet.
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT20=Note: Removing Renux Shell will remove all programs installed by Renux Shell. Delete? [Y/N]
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT21=Rolling back the registration of the *.rs extension in the system registry ...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT22=Rolling back the registration of Renux Shell in the system registry...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT23_PREFIX=Rolling back the application installation
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT24=Failed to delete folder along path:
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT25=Removing a shortcut from the Start menu...
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT26=The program has been removed. Thanks for using.
RSHELL_COMMAND_INTERNAL_CONSOLE_TEXT27=Invalid command parameter.
RSHELL_COMMAND_DOCUMENTATION_DOCS_SYNTAX1=help [command name]
RSHELL_COMMAND_DOCUMENTATION_DOCS_SYNTAX2=? [command name]
RSHELL_COMMAND_DOCUMENTATION_DOCS_TEXT=If the parameter is omitted, it opens the manual for the Renux Shell program as a window with a graphical user interface.\nIf specified, searches for help for the specified command.\nIf the parameter specifies "." (period) then opens the help asynchronously.
RSHELL_COMMAND_DOCUMENTATION_DOCS_NOTES=To abbreviate a command, you can use the "?" Character instead of the word "HELP".\nYou can also add a question mark at the end of a command to open help about it.
RSHELL_COMMAND_DOCUMENTATION_DOCS_EXAMPLES=help\n  ?\n  help abs\n  ? abs\n  abs?\n  mouse.move?\n  output?
RSHELL_COMMAND_DOCUMENTATION_FUNC_SYNTAX=func <name>:
RSHELL_COMMAND_DOCUMENTATION_FUNC_DESCRIPTION=Executes the macro specified after the function name and continues execution until it encounters END.
RSHELL_COMMAND_DOCUMENTATION_FUNC_NOTE=a function is only executed when it is called by name.
RSHELL_COMMAND_DOCUMENTATION_FUNC_EXAMPLE=// Declaring a function named "plus_one" that will add one to the variable "a".\n  func plus_one:\n  var a += 1\n  end\n  \n  label loop:\n  // We call the "plus_one" function simply by specifying its name.\n  plus_one\n  goto loop
RSHELL_COMMAND_DOCUMENTATION_FUNC_EXAMPLE_SHORT=func function_name:
RSHELL_COMMAND_DOCUMENTATION_FUNC_NOTE_LONG=At the end of the function script, use the "END" command.\nYou can call the function by the name of the function (that is, if the name of the function is "best_best_function_in_world", then to call it, you need to specify "best_best_function_in_world" in the script).
RSHELL_COMMAND_DOCUMENTATION_FUNC_EXAMPLE_PART_OF_SCRIPT=An example of a part of a script:
RSHELL_COMMAND_DOCUMENTATION_FUNC_TEXT1=Command '%1' could not be executed (you cannot create labels, hotkeys, functions and jump to them in functions).
RSHELL_COMMAND_DOCUMENTATION_FUNC_TEXT2=Function% 1 detected.
RSHELL_COMMAND_DOCUMENTATION_ADZ_SYNTAX=ABS <parameter>
RSHELL_COMMAND_DOCUMENTATION_ADZ_DESCRIPTION=> Since the program (Renux Shell) accepts arguments (parameters) at the start of the program, the ABS command (abbr. "Argument Before Startup") allows you to enter them after the program starts.\nAn example of how you can start debug mode in a program by specifying a launch parameter:\n\n  1. Open a command prompt in the program folder.\n  2. Specify the command: rshell.exe /debug\n  3. Press the Enter key.\n\nIn order not to open the command line, etc., you can specify the launch parameter after the "ABS" command.\nThe same debug mode can be called by specifying a command in Renux:\n  abs /debug
RSHELL_COMMAND_DOCUMENTATION_ADZ_LAUNCH_PARAM_LIST=Launch parameter list:
RSHELL_COMMAND_DOCUMENTATION_ADZ_LAUNCH_PARAM_LIST_TEXT=/hide - run completely in the background. Works only in batch file execution mode.\n  /ignore_errors - ignore errors (only works for file execution mode).\n  /ignore_warnings - ignore warnings (only works for file execution mode).\n  /output_mode:<msg/print> - change the mode of displaying error / warning / information messages (msg - to the dialog box, print - to the console).\n  /debug - debug mode, shows additional information.\n  /log - write the contents of the console to the log file.\n  /new - open RS in a new window.\n  /ns - do not freeze child process when RS connects to process console.\n  /compile - see the BUILD command help (for a shortcut, enter the BUILD? command).
RSHELL_COMMAND_DOCUMENTATION_ADZ_EXAMPLE=abs /debug
RSHELL_COMMAND_DOCUMENTATION_ADZ_TEXT=See Help for command line arguments (case does not matter).
RSHELL_COMMAND_DOCUMENTATION_ADMIN_SYNTAX=admin
RSHELL_COMMAND_DOCUMENTATION_ADMIN_DESCRIPTION=Restarts Renux Shell as administrator.
RSHELL_COMMAND_DOCUMENTATION_ADMIN_EXAMPLE=admin
RSHELL_COMMAND_DOCUMENTATION_ADMIN_ERROR_TEXT=Failed to get administrator rights. Perhaps this is due to the installed User Account Control settings. Try to run the program as administrator manually through the context menu when you click the program shortcut.
RSHELL_COMMAND_DOCUMENTATION_INPUT_SYNTAX=input <input var>
RSHELL_COMMAND_DOCUMENTATION_INPUT_DESCRIPTION=Waits for user input and writes the input to a variable.
RSHELL_COMMAND_DOCUMENTATION_INPUT_EXAMPLE=input a
RSHELL_COMMAND_DOCUMENTATION_OUTPUT_SYNTAX=output <text>
RSHELL_COMMAND_DOCUMENTATION_OUTPUT_DESCRIPTION=Prints the specified text to the console (on a new line).
RSHELL_COMMAND_DOCUMENTATION_OUTPUT_EXAMPLE=output Hello World!
RSHELL_COMMAND_DOCUMENTATION_TUTORIAL_SYNTAX=learn
RSHELL_COMMAND_DOCUMENTATION_TUTORIAL_DESCRIPTION=Opens a tutorial window where you will learn how to use the Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_TUTORIAL_NOTE=The learning window opens asynchronously, so it is not possible to intercept it through the WOUTPUT or OC.
RSHELL_COMMAND_INTERNAL_TUTORIAL_ERROR=Failed to start training.
RSHELL_COMMAND_DOCUMENTATION_UPDATELIST_SYNTAX=updatelist
RSHELL_COMMAND_DOCUMENTATION_UPDATELIST_DESCRIPTION=Displays a list of updates to the current version.
RSHELL_COMMAND_DOCUMENTATION_ASYNC_SYNTAX=asynx '<command>' '[variable name for output. CONSOLE.RESULT]'
RSHELL_COMMAND_DOCUMENTATION_ASYNC_DESCRIPTION=Executes the command in the second thread as far as possible (if expected from the user in the console, it is executed after the input).
RSHELL_COMMAND_DOCUMENTATION_ASYNC_NOTE=The ASYNC command cannot contain another ASYNC command, since the ASYNC will be overwritten and only the last command specified in the ASYNC will be executed in the second thread.
RSHELL_COMMAND_DOCUMENTATION_ASYNC_EXAMPLE=asynch 'output Testing asynchronous execution.' 'result'
RSHELL_COMMAND_DOCUMENTATION_OUTPUTL_SYNTAX=outputwl <text>
RSHELL_COMMAND_DOCUMENTATION_OUTPUTL_DESCRIPTION=Prints the specified text to the console (no newline).
RSHELL_COMMAND_DOCUMENTATION_OUTPUTL_EXAMPLE=outputwl Hello world!
RSHELL_COMMAND_DOCUMENTATION_OUTCON_SYNTAX=outputconsole <command>
RSHELL_COMMAND_DOCUMENTATION_OUTCON_EXAMPLE=outputconsole ??
RSHELL_COMMAND_INTERNAL_OUTCON_ERROR=Invalid operation in console output redirection mode.
RSHELL_COMMAND_DOCUMENTATION_OUTCON_DESCRIPTION=Executes the command while avoiding the RS GUIs.
RSHELL_COMMAND_DOCUMENTATION_OUTCON_PARAMETERS=<command> - the command to be executed.
RSHELL_COMMAND_DOCUMENTATION_TITLE_SYNTAX=title <new title>
RSHELL_COMMAND_DOCUMENTATION_TITLE_DESCRIPTION=Changes the title of the main Renux Shell window.
RSHELL_COMMAND_DOCUMENTATION_TITLE_EXAMPLE=title New Title
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_SYNTAX=woutput [output parameter]
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_DESCRIPTION=Changes the output mode of Remix messages.
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_OUTPUT_PARAM_PREFIX=Output parameter:
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_OUTPUT_PARAM=If you omit the parameter, the output will be redirected to the console (by default).\nIf the first character on the left side is ":", then the output will be redirected to the variable whose name is specified after the ":").*\nIf the parameter is specified without the first character (as in the clause with an asterisk) and is not omitted, then the output will be redirected to the file whose path you specify in this argument.
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_NOTE=This command redirects messages from this program only! Other console applications launched from Renux Shell will not be redirected!\nIf you declare the path to the file in the [output parameter], it will be deleted first, after that the process of redirecting output to this file will already start.\nBlank lines are not written to the output!\nProgram performance may slow down while output is being redirected!\nRenux Shell will cancel waiting for any user input while redirection is active!\nThe program will read the contents of additional RS windows, write their contents to the output, and close these windows.\nIf you need to redirect output from console applications, then use the built-in command "CMD".
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_EXAMPLE_OUTPUT_TO_VARIABLE_PREFIX=Example with redirecting output to a variable:
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_EXAMPLE_OUTPUT_TO_VARIABLE=woutput :write_output_command_dir\n  dir\n  woutput\n  output %write_output_command_dir%
RSHELL_COMMAND_DOCUMENTATION_WOUTPUT_EXAMPLE=woutput log.txt\n  dir\n  woutput\n  log.txt
RSHELL_COMMAND_DOCUMENTATION_PAUSE_SYNTAX=pause
RSHELL_COMMAND_DOCUMENTATION_PAUSE_DESCRIPTION=Waits for a letter/number on the keyboard to be pressed.
RSHELL_COMMAND_DOCUMENTATION_TRANSPARENT_SYNTAX=transparent <integer>
RSHELL_COMMAND_DOCUMENTATION_TRANSPARENT_DESCRIPTION=Changes the transparency of the Renux Shell command line window.
RSHELL_COMMAND_DOCUMENTATION_TRANSPARENT_EXAMPLE=transparent 240
RSHELL_COMMAND_INTERNAL_TRANSPARENT_TEXT1=The first argument must be an integer.
RSHELL_COMMAND_INTERNAL_TRANSPARENT_TEXT2=The number from the first argument must be in the range 100 to 255.
RSHELL_COMMAND_DOCUMENTATION_DO_SYNTAX=do <command>
RSHELL_COMMAND_DOCUMENTATION_DO_EXAMPLE=do output Hello
RSHELL_COMMAND_DOCUMENTATION_DO_DESCRIPTION=Executes the command.
RSHELL_COMMAND_DOCUMENTATION_DO_PARAMETERS=<command> - the command to be executed.
RSHELL_COMMAND_DOCUMENTATION_SVC_SYNTAX=services
RSHELL_COMMAND_DOCUMENTATION_SVC_DESCRIPTION=Allows you to edit the internal settings (config) of the Renux Shell in console mode.
RSHELL_COMMAND_DOCUMENTATION_SVC_NOTE=Don't change anything if you don't understand anything. This can lead to unstable work of the program.
RSHELL_COMMAND_DOCUMENTATION_SVC_EXAMPLE=services
RSHELL_COMMAND_INTERNAL_SVC_WORD_NUMBER=No.
RSHELL_COMMAND_INTERNAL_SVC_NAME_OF_SERVICE_TEXT=Service name
RSHELL_COMMAND_INTERNAL_SVC_WORD_DESCRIPTION=Description
RSHELL_COMMAND_INTERNAL_SVC_TEXT=Specify the service number to interact with it:
RSHELL_SERVICE_PERMISSIONS_COMMAND_NAME=PERM.COMMAND
RSHELL_SERVICE_PERMISSIONS_COMMAND_DESCRIPTION=A service that assigns the necessary rights to execute commands.
RSHELL_SERVICE_PERMISSIONS_COMMAND_STARTED_TEXT=The service for assigning the necessary rights to execute commands has started.
RSHELL_SERVICE_PERMISSIONS_COMMAND_TEXT1=Commands that will only work with administrator rights: %1.
RSHELL_SERVICE_PERMISSIONS_COMMAND_TEXT2=Change the list of prohibited commands? [Y-yes/N-no/S-standard]
RSHELL_SERVICE_PERMISSIONS_COMMAND_TEXT3=List commands separated by a space. These commands will only be executed if the program is run as administrator.
RSHELL_SERVICE_PERMISSIONS_COMMAND_TEXT_ALL_COMMANDS_ALLOWED=all commands are allowed
RSHELL_SERVICE_PERMISSIONS_COMMAND_TEXT4_PREFIX=Applied. Now
RSHELL_SERVICE_PERMISSIONS_COMMAND_TEXT4=these commands won't run without admin rights:
RSHELL_SERVICE_PERMISSIONS_COMMAND_TEXT5=all commands will be executed
RSHELL_SERVICE_PARSER_PARAMS_NAME=PARSER.PARAMETERS
RSHELL_SERVICE_PARSER_PARAMS_DESCRIPTION=Service for assigning new parameters for the RS command handler.
RSHELL_SERVICE_PARSER_PARAMS_STARTED_TEXT=The service for assigning new parameters for the RS command handler has started.
RSHELL_SERVICE_PARSER_PARAMS_TEXT1=- At this time, the command handler %1 has the required arguments.
RSHELL_SERVICE_PARSER_PARAMS_TEXT2=ignores
RSHELL_SERVICE_PARSER_PARAMS_TEXT3=requires
RSHELL_SERVICE_PARSER_PARAMS_TEXT4_PREFIX=- The variable is denoted by the sign:
RSHELL_SERVICE_PARSER_PARAMS_TEXT5=Change the current settings? [Y-yes/N-no]
RSHELL_SERVICE_PARSER_PARAMS_TEXT6=1) Ignore/require required arguments.\n2) Change the sign for the variable.
RSHELL_SERVICE_PARSER_PARAMS_TEXT7=\nSelect the parameter to change (you need to specify a number):
RSHELL_SERVICE_PARSER_PARAMS_TEXT8=Ignore required arguments? [Y-ignore / N-require]
RSHELL_SERVICE_PARSER_PARAMS_TEXT9=Applied. The command handler %1 now has the required arguments.
RSHELL_SERVICE_PARSER_PARAMS_TEXT10=Change the sign of the variable designation (highly discouraged)? [Y-yes/N-no/S-standard]
RSHELL_SERVICE_PARSER_PARAMS_TEXT11=\nSpecify ONE character to represent the variable:
RSHELL_SERVICE_PARSER_PARAMS_TEXT12=This symbol cannot denote a variable.
RSHELL_SERVICE_PARSER_PARAMS_TEXT13_PREFIX=Applied. Now this symbol denotes a variable:
RSHELL_SERVICE_PARSER_PARAMS_TEXT14=The action number could not be recognized.
RSHELL_SERVICE_START_COMMAND_NAME=START.COMMAND
RSHELL_SERVICE_START_COMMAND_DESCRIPTION=The command destination service to execute when the Renux Shell starts up.
RSHELL_SERVICE_START_COMMAND_STARTED_TEXT=The command assignment service has started to run when the Renux Shell starts.
RSHELL_SERVICE_START_COMMAND_TEXT1=The command to run at startup: %1.
RSHELL_SERVICE_START_COMMAND_TEXT2=<empty>
RSHELL_SERVICE_START_COMMAND_TEXT3=\nChange the command? [Y-yes/N-no/S-standard]
RSHELL_SERVICE_START_COMMAND_TEXT4_PREFIX=Specify the command to run when RS starts up:
RSHELL_SERVICE_START_COMMAND_TEXT5_PREFIX=Applied. Now, when the program starts, the command will be executed:
RSHELL_SERVICE_VKAPI_PROXY_NAME=VKAPI.PROXY
RSHELL_SERVICE_VKAPI_PROXY_DESCRIPTION=Service of assigning a new proxy for the command 'VKAPI'.
RSHELL_SERVICE_VKAPI_PROXY_STARTED_TEXT=The service of assigning a new proxy for the 'VKAPI' command has started.
RSHELL_SERVICE_VKAPI_PROXY_TEXT1=Current proxy setting for VK: %1.
RSHELL_SERVICE_VKAPI_PROXY_TEXT2=<empty>
RSHELL_SERVICE_VKAPI_PROXY_TEXT3=\nChange proxy? [Y-yes/N-no/S-standard]
RSHELL_SERVICE_VKAPI_PROXY_TEXT4_PREFIX=Specify a new proxy:
RSHELL_SERVICE_VKAPI_PROXY_TEXT5=This string cannot be a proxy.
RSHELL_SERVICE_VKAPI_PROXY_TEXT6_PREFIX=Applied. Now requests to the VK API go through:
RSHELL_SERVICE_VKAPI_PROXY_TEXT7=The service number could not be recognized.
RSHELL_COMMAND_DOCUMENTATION_VKAPI_RESET_SYNTAX=VKAPI.
RSHELL_COMMAND_DOCUMENTATION_VKAPI_RESET_DESCRIPTION=Erases VK token information from the current PC.
RSHELL_COMMAND_DOCUMENTATION_VKAPI_RESET_EXAMPLE=vkapi.
RSHELL_COMMAND_INTERNAL_VKAPI_RESET_TEXT1=You are not signed in yet.
RSHELL_COMMAND_INTERNAL_VKAPI_RESET_TEXT2=The token for working with the VK API has been successfully cleared from the config and process memory.
RSHELL_COMMAND_DOCUMENTATION_TOOLTIP_SYNTAX=tooltip '[text]' '[x]' '[y]' '[id]'
RSHELL_COMMAND_DOCUMENTATION_TOOLTIP_DESCRIPTION=Creates a window that will always be on top of all windows.
RSHELL_COMMAND_DOCUMENTATION_TOOLTIP_PARAMETERS=[text] = If the field is empty or missing, the existing tooltip (if any) will be hidden. Otherwise, this parameter is the text displayed in the tooltip.\n[x] and [y] = The X and Y position of the tooltip relative to the screen. If coordinates are omitted, a tooltip will be shown next to the mouse cursor.\n[id] = Omit this parameter if you do not want multiple tooltips to appear at the same time. Otherwise, it is a number between 1 and 20 indicating which tooltip window to work on. If not specified, this number is 1 (first).
RSHELL_COMMAND_DOCUMENTATION_TOOLTIP_NOTES=If the X and Y coordinates cause the tooltip to disappear from the screen, it will be fully visible.\nThe tooltip is displayed until one of the following occurs:\n- The script ends.\n- The TIP command is executed again with an empty parameter [text].\n - User clicks on the tooltip (this may depend on the version of the operating system).
RSHELL_COMMAND_DOCUMENTATION_TOOLTIP_EXAMPLE=toolip 'Tooltip with text is displayed next to the mouse'\n  wait.time 5000\n  tooltip 'Tooltip with text is displayed at X and Y coordinates (100, 100)' '100' '100'\n  wait.time 5000\n  tooltip 'Tooltip #1' '100' '100' '1'\n  tooltip 'Tooltip #2' '100' '150' '2'\n  tooltip 'Tooltip #3' '100' '200' '3'\n  tooltip '' '' '' '1'; tooltip '' '' '' '2'; tooltip '' '' '' '3';
RSHELL_COMMAND_DOCUMENTATION_STEXTOFF_SYNTAX=splashtextoff
RSHELL_COMMAND_DOCUMENTATION_STEXTOFF_DESCRIPTION=Deletes an existing splash window created with SPLASHTEXTON.
RSHELL_COMMAND_DOCUMENTATION_STEXTON_SYNTAX=splashtexton '[width]' '[height]' '[title]' '[text]'
RSHELL_COMMAND_DOCUMENTATION_STEXTON_DESCRIPTION=Creates a custom text popup.
RSHELL_COMMAND_DOCUMENTATION_STEXTON_PARAMETERS=<width> = The width in pixels of the window. Default 200.\n  <height> = The height, in pixels, of the window (not including the title bar). The default is 0 (that is, only the title bar will be shown).\n  <title> = The name of the window. The default is empty.\n  <text> = Window text. The default is empty.
RSHELL_COMMAND_DOCUMENTATION_STEXTON_NOTES=To change the layout and font name/color/size as much as possible, use the SPLASHTEXTON command with the zh0 option, which skips the panel and displays only the text. For example: SPLASHTEXTON 'zh0 fs18' 'Font (18 points)' '' ''.\nUse the SPLASHTEXTOFF command to remove an existing splash window.\nThe popup is "always on top", which means it is stays above all other normal windows.\nOnly one window per Renux Shell session is possible for this command.
RSHELL_COMMAND_DOCUMENTATION_STEXTON_EXAMPLES=splashtexton '' '' 'Displays only the title bar.' ''\n  wait.time 3000\n  splashtexton '' '' 'Clipboard' '%.system.clipboard%'\n  wait.time 3000\n  splashtextoff
RSHELL_COMMAND_DOCUMENTATION_INPUTBOX_SYNTAX=input.box '<output (variable name)>' '<heading>' '<text>' '[hide? (flag = 0/1)] '' [width] '' [height] '' [x] '' [y] '' [font name] '' [timeout] '' [default text] '
RSHELL_COMMAND_DOCUMENTATION_INPUTBOX_DESCRIPTION=Displays an input field to ask the user to enter a string.
RSHELL_COMMAND_DOCUMENTATION_INPUTBOX_PARAMETERS=<output> = The name of the variable into which the user-entered string will be placed.\n<title> = The title of the script window.\n<text> = Explanatory text displayed in the window. Can prompt the user what is required of him. If the text is long, it can be split using the hyphenation section `n.\n[hide?] = If you specify "1", the input will be masked. Usually used to enter passwords.\n[width] = The width of the window in pixels, can be an expression. If omitted, will be 375.\n[height] = Height of the window in pixels, can be an expression. If omitted, it will be equal to 189.\n[x] and [y] = Coordinates of the window from the top-left corner (0,0). May be negative. If the parameter is omitted, the window will be aligned in the middle. For example, if X is omitted and Y is 0, the window will be at the top center of the screen.\n[font name] = Not yet implemented (leave blank).\n[timeout] = Timeout in seconds, may contain a decimal point. If more than 2147483 (24.8 days), it will be set to 2147483. When the time expires, the window will be closed, and% .console.result% is set to -1. In this case, what the user managed to enter will be placed in <output>.\n[default text] = The text of the default input field that appears along with the window. The user can erase or change it.
RSHELL_COMMAND_DOCUMENTATION_INPUTBOX_TEXT1_PREFIX=Addition:
RSHELL_COMMAND_DOCUMENTATION_INPUTBOX_TEXT2=The dialog box contains an input field and two buttons: Ok and Cancel;\n The user can resize the window by dragging the borders;\n If the user pressed Cancel, <output> will be empty and %.console.result% is set to 0. If OK key pressed - %.console.result% contains 1.
RSHELL_COMMAND_DOCUMENTATION_INPUTBOX_EXAMPLE=input.box 'number' 'Phone number' 'Enter your phone number' '' '' '' '' '' '' '' '+7'
RSHELL_COMMAND_DOCUMENTATION_ENC_BASE64_SYNTAX=encode.base64 '<data output (variable name)>' '<data input (variable name)>' '<data size in bytes>'
RSHELL_COMMAND_DOCUMENTATION_ENC_BASE64_DESCRIPTION=Base64 encodes data.
RSHELL_COMMAND_DOCUMENTATION_ENC_BASE64_EXAMPLE=encode.base64 'format_base64' 'data' '%size%'
RSHELL_COMMAND_DOCUMENTATION_FILE_WRITE_RAW_SYNTAX=file.write.raw '<input of binary data (variable name)>' '<size in bytes>' '<path to file>'
RSHELL_COMMAND_DOCUMENTATION_FILE_WRITE_RAW_EXAMPLE=file.write.raw 'raw_data' '%size%' 'test.txt'
RSHELL_COMMAND_DOCUMENTATION_FILE_WRITE_RAW_DESCRIPTION=Writes the contents of a variable to a file in binary mode.
RSHELL_COMMAND_DOCUMENTATION_FILE_WRITE_RAW_TEXT1=Could not open file.
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_RAW_SYNTAX=file.read.raw '<output binary data (variable name)>' '<output size in bytes (variable name)>' '<path to file>'
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_RAW_EXAMPLE=file.read.bin 'raw_data' 'size' 'test.txt'
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_RAW_DESCRIPTION=Reads a file in binary mode and writes its contents to a variable.
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_RAW_TEXT1=Could not open file.
RSHELL_COMMAND_DOCUMENTAITON_RECYCLE_EMPTY_SYNTAX=recycle.empty [drive letter]
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_EMPTY_DESCRIPTION=Clears the Trash.
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_EMPTY_PARAMETER_PREFIX=Option [drive letter]
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_EMPTY_PARAMETER=Drive letter, for example: C:\. If the parameter is omitted, the Recycle Bin is emptied for all disks.
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_EMPTY_NOTE=This command requires Internet Explorer 4 or later to be installed.
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_EMPTY_EXAMPLE=recycle.empty C:\
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_SYNTAX=recycle <path>
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_DESCRIPTION=Sends a file or folder to the Trash if possible.
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_NOTE=To send a folder to the Trash, enter its name without the backslash at the end.
RSHELL_COMMAND_DOCUMENTATION_RECYCLE_EXAMPLE=recycle test.txt
RSHELL_COMMAND_DOCUMENTATION_FILE_ENCODING_SYNTAX=file.encoding [encoding]
RSHELL_COMMAND_DOCUMENTATION_FILE_ENCODING_DESCRIPTION=Sets the default encoding for the commands: file.read, file.read.line, file.create, and also for the internal functions of the Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_FILE_ENCODING_PARAMETER_PREFIX=Parameter [encoding]:
RSHELL_COMMAND_DOCUMENTATION_FILE_ENCODING_PARAMETER=If one of the following conditions is omitted, it defaults to ANSI encoding:\n  UTF-8: Unicode UTF-8 equivalent to CP65001.\n  UTF-8-RAW: Likewise above, but no byte order is written when creating a new file.\n  UTF-16: Big endian Unicode UTF-16, equivalent to CP1200.\n  UTF-16-RAW: Same as above, but no byte order is written when creating a new file.\n  CPnnn: Page code nnn. See Code Page Identifiers.
RSHELL_COMMAND_DOCUMENTATION_FILE_ENCODING_EXAMPLE=file.encoding UTF-8
RSHELL_COMMAND_DOCUMENTATION_FILE_OUTPUT_SYNTAX=outputf <path>
RSHELL_COMMAND_DOCUMENTATION_FILE_OUTPUT_DESCRIPTION=Prints the contents of a file to the console.
RSHELL_COMMAND_DOCUMENTATION_FILE_OUTPUT_EXAMPLE=outputf test.txt
RSHELL_COMMAND_DOCUMENTATION_PROCESS_FIND_SYNTAX=process.search '<array name to output>' '<full/part process name>'
RSHELL_COMMAND_DOCUMENTATION_PROCESS_FIND_DESCRIPTION=Writes a list of processes with their identifiers to an array.
RSHELL_COMMAND_DOCUMENTATION_PROCESS_FIND_PARAMETER_PREFIX=Parameter <process name/part name>:
RSHELL_COMMAND_DOCUMENTATION_PROCESS_FIND_PARAMETER=Specify "." to record all processes.
RSHELL_COMMAND_DOCUMENTATION_PROCESS_FIND_EXAMPLE=process.search 'processes_list' '.'
RSHELL_COMMAND_DOCUMENTATION_PROCESS_FIND_ARR_PROCNAME=_name
RSHELL_COMMAND_DOCUMENTATION_PROCESS_FIND_ARR_ID=_id
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_SYNTAX=inputk '<output>' '[options]' '[end-keys]'
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_DESCRIPTION=Waits for the user to print a string.
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_ARGUMENTS_PREFIX=Arguments:
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_ARGUMENTS=output = variable name for output\n  options = see below\n  end-keys = see below
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_OPTIONS_PREFIX=Options (can be empty or contain any of the following letters (in any order, with or without spaces):
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_OPTIONS=All letters in English layout.\n\n  B - Backspace is ignored. By default, pressing Backspace deletes the last entered character from the end of the line. Note: if the input text is visible (for example, in the editor) and you have used arrow keys or other means to move through the text, Backspace will still delete the last character of the text, not the one behind the carriage (text cursor).\n  I: Ignore input generated by Renux Shell scripts. However, input via the PRINTB command is always ignored, regardless of this setting.\n  L: Length limitation (eg L5). The maximum allowed length of the input string. When the text reaches the specified length, the ENTER command ends. If this parameter is not specified, the length limit is 16383 characters, which is also the absolute maximum.\n  T: Timeout (for example, T3). After the specified number of seconds, the ENTER command will end. If INPUT timed out, "<output>" will contain the text that the user had time to enter. Can be specified as a floating point number, for example, 2.5.\n  V: Text visibility. By default, user input is blocked (hidden from the system). Use this option if you want input to be sent to the active window.
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_ENDKEYS_PREFIX=End-keys:
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_ENDKEYS=It can be empty or contain a list of keys, pressing any of which should terminate ENTER (these keys themselves will not be included in "<output>").\n  The list "<destination keys>" uses the same format as for the PRINT command. For example, specifying {Enter}. {Esc} will terminate ENTER, period (.), Or ESCAPE. For the curly braces themselves to end INSERT, they must be specified as {{} and / or {}}. \n To use Control, Alt, or Shift as trailing brackets, specify the left and/or right key of a pair specifically. For example, {LControl} {RControl} but not {Control}
RSHELL_COMMAND_DOCUMENTATION_KEYBOARD_INPUT_EXAMPLE=// Changes the word "Hi" to "Hello"\n  loop inputk 'text' 'V' '{Space}{Enter}';var text down`;if '%text%' == 'hi' then writef {BackSpace 3}Hello,%.console.space%
RSHELL_COMMAND_DOCUMENTATION_CMDLIST_SYNTAX=cmdlist
RSHELL_COMMAND_DOCUMENTATION_CMDLIST_DESCRIPTION=Lists all program commands to the console.
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_SYNTAX=file.get '<the name of the array to output>' '<full path>'
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_DESCRIPTION=Writes file properties to an array (usually for .EXE, .DLL files).
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_ARRAY_WRITE_PREFIX=Writes the following keys to an array:
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_ARRAY_WRITE=CompanyName, FileDescription, FileVersion, InternalName, LegalCopyright, OriginalFileName, ProductName, ProductVersion.
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_EXAMPLE=file.get 'information' 'C:\test.exe'
RSHELL_COMMAND_DOCUMENTATION_FILE_SEARCH_SYNTAX=file.search '<the name of the array to output>' '<file template>' '[mode]'
RSHELL_COMMAND_DOCUMENTATION_FILE_SEARCH_DESCRIPTION=Searches the repository to find files/folders by the specified template.
RSHELL_COMMAND_DOCUMENTATION_FILE_SEARCH_FILE_PATTERN_PREFIX=File template:
RSHELL_COMMAND_DOCUMENTATION_FILE_SEARCH_FILE_PATTERN=An individual file or folder name or wildcard, such as C:\Temp\*.tmp.\n  <file template> is assumed to be in %.console.workingdir% if no absolute path is specified.
RSHELL_COMMAND_DOCUMENTATION_FILE_SEARCH_MODES_PREFIX=Modes:
RSHELL_COMMAND_DOCUMENTATION_FILE_SEARCH_MODES=If empty or omitted, only files are included, and subdirectories are not recursive. Otherwise, specify one or more of the following letters:\n  D = include directories.\n  F = include files. If D and F are omitted, files are included, but not folders.\n  R = recursion into subdirectories (subfolders). If P is not specified, files and folders in subfolders are not included.
RSHELL_COMMAND_DOCUMENTATION_FILE_SEARCH_EXAMPLE=file.seatch 'files' '*.lnk' 'FDR'
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT1=D
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT2=F
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT3=R
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT4=name
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT5=path
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT6=An error occurred while executing the command.
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT7=name
RSHELL_COMMAND_INTERNAL_FILE_SEARCH_TEXT8=path
RSHELL_COMMAND_DOCUMENTATION_ENV_SET_SYNTAX=env.set '<the name of the environment variable to use, such as "COMSPEC" or "PATH".>' '<The value to assign to the environment variable>'
RSHELL_COMMAND_DOCUMENTATION_ENV_SET_DESCRIPTION=Sets the value of an environment variable.
RSHELL_COMMAND_DOCUMENTATION_ENV_SET_EXAMPLE=env.set 'Renux' 'text'
RSHELL_COMMAND_DOCUMENTATION_ENV_GET_SYNTAX=env.get '<name of the variable where the received value will be placed>' '<Name of the external variable whose value we want to receive>'
RSHELL_COMMAND_DOCUMENTATION_ENV_GET_DESCRIPTION=Gets the value of an environment variable.
RSHELL_COMMAND_DOCUMENTATION_ENV_GET_EXAMPLE=env.get 'path' 'PATH'
RSHELL_COMMAND_DOCUMENTATION_ENV_UPDATE_SYNTAX=env.update
RSHELL_COMMAND_DOCUMENTATION_ENV_UPDATE_DESCRIPTION=Notifies the operating system and all running applications that environment variables have changed.
RSHELL_COMMAND_DOCUMENTATION_COMPILE_FIRST_PRE_SYNTAX_PREFIX=1st
RSHELL_COMMAND_DOCUMENTATION_COMPILE_SYNTAX1=build
RSHELL_COMMAND_DOCUMENTATION_COMPILE_SECOND_PRE_SYNTAX_PREFIX=2nd
RSHELL_COMMAND_DOCUMENTATION_COMPILE_SYNTAX2=build '<path to batch file>' '[path to icon]' '[launch parameters]' '[path to save file]'
RSHELL_COMMAND_DOCUMENTATION_COMPILE_DESCRIPTION=Converts a Renux Shell batch file to an executable file (* .exe).
RSHELL_COMMAND_DOCUMENTATION_COMPILE_PARAMETER_COMPILE_PREFIX=Launch parameter /COMPILE:
RSHELL_COMMAND_DOCUMENTATION_COMPILE_PARAMETER_COMPILE=You can "compile" a batch file by calling the command line and entering:\n  <path to Renux Shell> /compile "<path to batch file>" "[path to icon]" "[launch parameters]" "[path to save the file ] " "[connect to the console? (0-no, 1-yes)]"\n\n - Example: \n rshell.exe /compile script.rs icon.ico" " "compiled_script.exe" 1
RSHELL_COMMAND_DOCUMENTATION_COMPILE_NOTE=If you do not specify the path to the icon, then the Renux Shell icon will be used.\n  If you do not specify the path to save the file, Renux Shell will open a dialog box for selecting the folder and file name where the compiled Renux Shell batch file will be saved.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT1=Welcome to the Renux Shell Batch Build Wizard.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT2=Specify the full path to the batch file (*.rs):
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT3=Specify the full path to the icon (*.ico):
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT4=The program icon will be used.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT5=Specify with what starting parameters the program will be launched (for example, /hide /debug, etc.):
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT6=You did not provide a path to a batch file.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT7=The file at the specified path (1st parameter) was not found.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT8_PREFIX=Unpacking
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT9=Failed to unpack
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT10=Try to raise the program rights and try again.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT_IN_WORD=in
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT11=Cleaning up temporary files...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT12=Batch file optimization...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT13=The batch file is empty.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT14=Optimized %1 script lines.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT15=Saving an Optimized Batch File...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT16=Failed to save optimized batch file.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT17=Copying the interpreter to the program folder...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT18_PREFIX=Failed to copy
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT19=Copying Renux Shell to program folder...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT20=Copying an Icon...
RSHELL_COMMMND_INTERNAL_COMPILE_TEXT21=Generating code for the executable...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT22=Failed to create executable.tmp file on %1!
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT23=Compiling the executable...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT24=Failed to compile source file. The error was displayed.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT25=Specify where to save the file
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT26=Copying the executable file to %1 ...
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT27=Failed to copy executable file to %1!
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT28=Try to raise the program rights and try again.
RSHELL_COMMAND_INTERNAL_COMPILE_TEXT29=Compilation completed without errors.
RSHELL_COMMAND_SUPERINTERNAL_COMPILE_TEXT1=Could not unpack script.rs file.`nTry elevate and try again.
RSHELL_COMMAND_SUPERINTERNAL_COMPILE_TEXT2_PREFIX=Failed to start executable file rshell.exe. Cause:
RSHELL_COMMAND_DOCUMENTATION_REQUEST_SYNTAX=request '<method>' '<parameter # 1>' '<parameter # 2>' '[parameter # 3]'
RSHELL_COMMAND_DOCUMENTATION_REQUEST_DESCRIPTION=The WinHttpRequest object is called, see: https://docs.microsoft.com/en-us/windows/win32/winhttp/winhttprequest for details
RSHELL_COMMAND_DOCUMENTATION_REQUEST_METHODS_PREFIX=Methods:
RSHELL_COMMAND_DOCUMENTATION_REQUEST_METHODS=open (open) - Opens an HTTP connection to an HTTP resource.\n  send (send) - Sends an HTTP request to the HTTP server.\n  setRequestHeader (SetRequestHeader) - Adds, changes, or removes an HTTP request header.\n  setTimeouts (SetTimeouts) - Specifies, in milliseconds, the individual components of the time-out for a send and receive operation.\n  waitForResponse (waitForResponse) - Specifies the time-out (in seconds) for the asynchronous dispatch method to complete, with an optional time-out value.
RSHELL_COMMAND_DOCUMENTATION_REQUEST_NOTE=The second parameter of the "submit" method specifies the name of the object without "%" (if form data is being loaded).
RSHELL_COMMAND_DOCUMENTATION_REQUEST_TEXT1_PREFIX=The example is not relevant for your localization.
RSHELL_COMMAND_DOCUMENTATION_REQUEST_TEXT1=-
RSHELL_COMMAND_INTERNAL_REQUEST_WORD_OPEN=open
RSHELL_COMMAND_INTERNAL_REQUEST_WORD_SEND=send
RSHELL_COMMAND_INTERNAL_REQUEST_TEXT1=The request uses an object.
RSHELL_COMMAND_INTERNAL_REQUEST_WORD_SETREQUESTHEADER=setrequestheader
RSHELL_COMMAND_INTERNAL_REQUEST_WORD_TIMEOUT=settimeouts
RSHELL_COMMAND_INTERNAL_REQUEST_WORD_WAITRESPONSE=waitresponse
RSHELL_COMMAND_INTERNAL_REQUEST_TEXT2=Method not recognized.
RSHELL_COMMAND_DOCUMENTATION_RANDOM_SYNTAX=random '<variable name where the result will be written>' '<minimum number>' '<maximum number>'
RSHELL_COMMAND_DOCUMENTATION_RANDOM_DESCRIPTION=Generates a random number and writes it to a variable.
RSHELL_COMMAND_DOCUMENTATION_RANDOM_EXAMPLE=random 'integer' '1' '100'\n  output result: %integer%.
RSHELL_COMMAND_DOCUMENTATION_CREATEFORMDATA_SYNTAX=createFormData '<file type>' '<file path>' '<output # 1>' '<output # 2>'
RSHELL_COMMAND_DOCUMENTATION_CREATEFORMDATA_DESCRIPTION=Creates an object from a file that can be sent to the server using the "REQUEST" command.
RSHELL_COMMAND_DOCUMENTATION_CREATEFORMDATA_PARAMETERS=File type:\n    "application" - Internal format of the application\n    "audio" - Audio\n    "image" - Image\n    "message" - Message\n    "model" - For 3D models\n    "multipart" - Email\n    "text" - Text\n    "video" - Video\n  \n  The path to the file:\n    The path to the file to be obtained is indicated.\n  \n  Output #1:\n    The name of the variable to which the information will be written: PostData.\n\n  Output #2:\n    The name of the variable to which the information will be written: Content-Type.
RSHELL_COMMAND_DOCUMENTATION_CREATEFORMDATA_EXAMPLE=createFormData 'photo' 'C:\photo.png' 'PostData' 'ContentType'
RSHELL_COMMAND_DOCUMENTATION_BRIGHTNESS_SYNTAX=brightness <[+/-]integer>
RSHELL_COMMAND_DOCUMENTATION_BRIGHTNESS_DESCRIPTION=Changes the brightness of the screen.
RSHELL_COMMAND_DOCUMENTATION_BRIGHTNESS_NOTE=It is recommended to use "-" or "+" in front of the value for maximum performance.
RSHELL_COMMAND_DOCUMENTATION_BRIGHTNESS_EXAMPLE=// Sets the current brightness to 10\n  brightness 10\n  \n  // Adds to the current brightness +10\n  brightness +10\n  \n  // Decreases from current brightness -10\n  brightness -10
RSHELL_COMMAND_DOCUMENTATION_SCREENSHOT_SYNTAX=screenshot <path>
RSHELL_COMMAND_DOCUMENTATION_SCREENSHOT_DESCRIPTION=Saves the screenshot to a file.
RSHELL_COMMAND_DOCUMENTATION_SCREENSHOT_EXAMPLE=screenshot screenshot.png
RSHELL_COMMAND_DOCUMENTATION_REG_DELETE_SYNTAX=reg.delete '<root partition name>' '<subkey name>' '[parameter name to delete]'
RSHELL_COMMAND_DOCUMENTATION_REG_DELETE_DESCRIPTION=Removes a registry key or setting.
RSHELL_COMMAND_DOCUMENTATION_REG_DELETE_PARAMETERS=root key name = Possible values: HKEY_LOCAL_MACHINE (or HKLM), HKEY_USERS (or HKU), HKEY_CURRENT_USER (or HKCU), HKEY_CLASSES_ROOT (or HKCR), HKEY_CURRENT_CONFIG (or HKCC) To access the remote registry, first specify the computer name followed by a colon at the end, as in this example: \\workstation01: HKEY_LOCAL_MACHINE\n  subkey name = (for example, Software\SomeApplication).\n  parameter name to remove = If omitted, all the section specified in SubKey. To remove the setting that appears in Registry Editor as the "(Default)" setting.
RSHELL_COMMAND_DOCUMENTATION_REG_DELETE_NOTE=Deleting from the registry is potentially dangerous - please be careful!
RSHELL_COMMAND_DOCUMENTATION_REG_DELETE_EXAMPLE=reg.delete 'HKEY_LOCAL_MACHINE' 'Software\SomeApplication' 'TestValue'
RSHELL_COMMAND_DOCUMENTATION_REG_READ_SYNTAX=reg.read '<variable output>' '<root dimension name>' '<subsection name>' '[parameter name]'
RSHELL_COMMAND_DOCUMENTATION_REG_READ_DESCRIPTION=Reads a parameter from the registry.
RSHELL_COMMAND_DOCUMENTATION_REG_READ_PARAMETERS=variable output = If the value cannot be read, the variable will be empty and .CONSOLE.RESULT will be set to 1.\n  root partition name = Possible values: HKEY_LOCAL_MACHINE (or HKLM), HKEY_USERS (or HKU), HKEY_CURRENT_USER (or HKCU), HKEY_CLASSES_ROOT (or HKCR), HKEY_CURRENT_CONFIG (or HKCC). To access the remote registry, first enter the computer name followed by a colon at the end, as in this example: \\workstation01: HKEY_LOCAL_MACHINE\n  Subkey name = (for example Software\SomeApplication).\n  Parameter name = (whose value you want to read). If omitted or empty, the value will be read, which appears under the name "(Default)" in Registry Editor. If no value is assigned to it, the output variable will be empty and .CONSOLE.RESULT is 1.
RSHELL_COMMAND_DOCUMENTATION_REG_READ_NOTES=Currently, only the following types of parameters are supported: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD, REG_BINARY.\n  REG_DWORD parameters are always expressed as positive decimal numbers.\n  No more than 64 KB of data can be read from REG_BINARY parameters, the rest do not have such restrictions.\n  Reading REG_BINARY results in a string of hexadecimal digits. For example: REG_BINARY with value 01, a9, ff, 77 will be read as 01A9FF77.\n  When reading REG_MULTI_SZ, all its components are terminated with line feed (`n). If there are no components, the output variable will be empty.
RSHELL_COMMAND_DOCUMENTATION_REG_READ_EXAMPLE=reg.read 'PATH' 'HKCU' 'Environment' 'PATH'
RSHELL_COMMAND_DOCUMENTATION_REG_WRITE_SYNTAX=reg.write '<type of parameter to write>' '<root key name>' '<subkey name>' '<registry parameter name>' '[value for parameter to write]'
RSHELL_COMMAND_DOCUMENTATION_REG_WRITE_DESCRIPTION=Writes a parameter to the registry.
RSHELL_COMMAND_DOCUMENTATION_REG_WRITE_PARAMETERS=Type of parameter to write = Possible values: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD, REG_BINARY.\n  Root key name = Possible values: HKEY_LOCAL_MACHINE (or HKLM), HKEY_USERS (or HKUCURR or HKERKEY_CR) HKEY_CURRENT_CONFIG (or HKCC). To access the remote registry, first enter the computer name followed by a colon at the end, as in this example: \\workstation01: HKEY_LOCAL_MACHINE\n Subkey name = (for example, Software\SomeApplication). If the section does not exist, it will be created (along with its parent sections, if necessary). If SubKey is left blank, writing will go straight to the root key (although some operating systems may refuse to write to HKEY_CURRENT_USER).\n  The name of the registry parameter = (which will be written). If omitted or empty, the parameter will be written, which is displayed under the name "(Default)" in the registry editor.\n  Value for the parameter to write = If omitted, it is considered an empty string or zero, depending on the type of parameter.
RSHELL_COMMAND_DOCUMENTATION_REG_WRITE_NOTES=The REG_DWORD parameters must be between -2147483648 and 4294967295 (0xFFFFFFFF).\n  The REG_BINARY and REG_MULTI_SZ parameters allow writing up to 64 KB of data, the rest are unlimited. When this limit is in effect, data beyond 64 KB will not be written. In other words, only the first 64KB of a very long string will be saved in the registry.\n  When writing the REG_BINARY parameter, use a hexadecimal string. For example, REG_BINARY 01,a9,ff,77 can be written by specifying 01A9FF77 in the command.\n  When writing REG_MULTI_SZ, you must separate each component from the next with a linefeed character (`n). The last component can also (but not necessarily) end with a line feed. Empty components are not allowed. In other words, do not include two line feeds in a row (`n`n), since the result will be a shorter than expected value in the registry.
RSHELL_COMMAND_DOCUMENTATION_REG_WRITE_EXAMPLE=reg.write 'REG_SZ' 'HKEY_LOCAL_MACHINE' 'SOFTWARE\TestKey' 'MyValueName' 'Test Value'
RSHELL_COMMAND_DOCUMENTATION_SOUND_PLAY_SYNTAX=sound.play '<file name>' '[wait? (1-yes/0-no)]>
RSHELL_COMMAND_DOCUMENTATION_SOUND_PLAY_DESCRIPTION=Plays audio and video files, or files of another supported format.
RSHELL_COMMAND_DOCUMENTATION_SOUND_PLAY_PARAMETERS=file name = If no full path is specified, the file is searched for in the working directory.\n  To play standard system sounds, set this parameter as an asterisk followed by a number, as shown below. Note that the "wait" option has no effect in this case.\n  * -1 Simple sound. If a sound card is not available, this sound will be played through the speaker of the system unit.\n  * 16 Stop/Error \n  * 32 Question \n * 48 Exclamation \n * 64 Asterisk (information) \n  Which files will be played in these cases is determined by setting the system sound scheme in the Sounds and Audio Devices dialog.\n  wait? = If omitted, execution of the following commands from the current script stream continues while the file is playing. To force the stream to wait until the file is finished playing, set the parameter to 1. \n  Known limitations: if the WAIT parameter is omitted, the operating system may sometimes perceive the file being played as busy until the script is closed or another file is played (even non-existent).
RSHELL_COMMAND_DOCUMENTATION_SOUND_PLAY_NOTES=All Windows operating systems can play wav files. However, files of other formats (mp3, avi, etc.) may require the installation of the corresponding codecs. If the script playing the file starts playing another file, the playback of the first file will stop. On some systems, files of certain formats may stop, even if the playback of the second file was started not by the same, but by a different script. To stop playing a file, use the SOUND.PLAY command with a non-existent file as a parameter. If the script terminates, playback of any file started by the script stops.
RSHELL_COMMAND_DOCUMENTATION_SOUND_PLAY_EXAMPLE=sound.play 'tada.wav' '1'
RSHELL_COMMAND_DOCUMENTATION_SOUND_GET_SYNTAX=sound.get '<variable for output>' '[component type]' '[setting type]' '[device number]'
RSHELL_COMMAND_DOCUMENTATION_SOUND_GET_DESCRIPTION=Reads the current settings of the audio device (mixer). A window with these settings opens, for example, when you double-click on the speaker in the tray.
RSHELL_COMMAND_DOCUMENTATION_SOUND_GET_PARAMETERS=output variable = Output variable name. Depending on the type of the read setting, the value returned to the variable can be a number (floating point) in the range from 0 to 100 (inclusive), or the word ON or OFF (for the ONOFF, MUTE, MONO, LOUDNESS, STEREOENH, BASSBOOST settings). If the setting fails, the variable will be empty. \n  component type = Component type (corresponds to one of the controls in the mixer settings window). If omitted or empty, it is set to MASTER (general volume control, which is also available with a single click on the speaker in the tray). Available Values: MASTER (same as SPEAKERS), DIGITAL, LINE, MICROPHONE, SYNTH, CD, TELEPHONE, PCSPEAKER, WAVE, AUX, ANALOG. If the mixer does not contain the specified component, this will be reflected by a message in the variable .console.result (see list below). A component designated as Auxiliary in the mixer may sometimes be available as ANALOG rather than AUX. If a mixer has more than one instance of a component, then usually the first contains the playback settings and the second contains the recording settings. To access the second and subsequent instances, add a colon and number to the component name. For example, Analog: 2. \n  type of setting = If omitted or empty, it is set to VOLUME. Valid values: VOLUME (or VOL), ONOFF, MUTE, MONO, LOUDNESS, STEREOENH, BASSBOOST, PAN, QSOUNDPAN, BASS, TREBLE, EQUALIZER. If a component does not support the specified kind of customization, this will be reflected by a message in the .console.result variable (see the list below). \n  device number = If omitted, it is set to 1, which usually corresponds to the system default device for recording and playback. To access other devices, specify a number greater than one.
RSHELL_COMMAND_DOCUMENTATION_SOUND_GET_TEXT1_PREFIX=Possible error text:
RSHELL_COMMAND_DOCUMENTATION_SOUND_GET_TEXT2=- Wrong customization view or component type\n  - Can't open the specified mixer\n  - The mixer does not support the specified component\n  - The number of components of this type in the mixer is less than the specified number.\n  - Component does not support the specified setting\n  - Cannot read the current setting
RSHELL_COMMAND_DOCUMENTATION_SOUND_GET_NOTE=Use the SOUND.SET command to change the settings.
RSHELL_COMMAND_DOCUMENTATION_SOUND_GET_EXAMPLE=sound.get 'volume' '' '' ''\n  output The general volume control is now at %volume% percent.\n  \n  sound.get 'master_mute' '' 'mute' ''\n  output The master volume control switch is now in the %master_mute% position.
RSHELL_COMMAND_INTERNAL_SOUND_GET_TEXT1=Wrong customization view or component type
RSHELL_COMMAND_INTERNAL_SOUND_GET_TEXT2=Can't open the specified mixer
RSHELL_COMMAND_INTERNAL_SOUND_GET_TEXT3=The mixer does not support the specified component
RSHELL_COMMAND_INTERNAL_SOUND_GET_TEXT4=The number of components of this type in the mixer is less than the specified number.
RSHELL_COMMAND_INTERNAL_SOUND_GET_TEXT5=Component does not support the specified setting
RSHELL_COMMAND_INTERNAL_SOUND_GET_TEXT6=Cannot read the current setting
RSHELL_COMMAND_INTERNAL_SOUND_GET_TEXT7=Can't change the setting
RSHELL_COMMAND_DOCUMENTATION_SOUND_BEEP_SYNTAX=sound.beep '<frequency in hertz>' '<duration in ms>
RSHELL_COMMAND_DOCUMENTATION_SOUND_BEEP_DESCRIPTION=Emits sound through the speaker of the system unit.
RSHELL_COMMAND_DOCUMENTATION_SOUND_BEEP_NOTE=The program is waiting for the end of the sound to continue its work. In addition, the responsiveness of the system as a whole may decrease during this time.
RSHELL_COMMAND_DOCUMENTATION_SOUND_BEEP_EXAMPLE=sound.beep 750 500
RSHELL_COMMAND_DOCUMENTATION_DISPLAY_SYNTAX=display <action>
RSHELL_COMMAND_DOCUMENTATION_DISPLAY_DESCRIPTION=Turns off/on the monitor.
RSHELL_COMMAND_DOCUMENTATION_DISPLAY_ACTIONS_PREFIX=Actions:
RSHELL_COMMAND_DOCUMENTATION_DISPLAY_ACTIONS=on - turns on the monitor\n  off - turns off the monitor\n  low - low power mode of the monitor
RSHELL_COMMAND_DOCUMENTATION_DISPLAY_EXAMPLE=display off\n  wait.time 5000\n  display on
RSHELL_COMMAND_INTERNAL_DISPLAY_ACTION_OFF_WORD=off
RSHELL_COMMAND_INTERNAL_DISPLAY_ACTION_ON_WORD=on
RSHELL_COMMAND_INTERNAL_DISPLAY_ACTION_ECO_WORD=low
RSHELL_COMMAND_INTERNAL_DISPLAY_ACTION_TEXT1=Action not recognized.
RSHELL_COMMAND_DOCUMENTATION_TRAYTIP_SYNTAX=traytip '<title>' '<text>' '<timeout>' '<options>'
RSHELL_COMMAND_DOCUMENTATION_TRAYTIP_DESCRIPTION=Creates a popup with a message next to the tray icon. On Windows 10, a toast notification may appear instead.
RSHELL_COMMAND_DOCUMENTATION_TRAYTIP_OPTIONS_PREFIX=Options:
RSHELL_COMMAND_DOCUMENTATION_TRAYTIP_OPTIONS=The parameter can be a combination (sum) of zero or more of the following values:\n - Information icon - 1, \n - Warning icon - 2, \n - Error icon - 3, \n - Do not play notification sound - 16, \n - use the larger version of the icon - 32. \n \n By default, the setting is 0. The icon is not displayed if the title is missing (this does not apply to Windows 10 toast notifications).
RSHELL_COMMAND_DOCUMENTATION_TRAYTIP_NOTE=Windows 10 replaces all pop-ups with toast notifications by default (this can be overridden using Group Policy). Calling "TRAYTIP" multiple times usually results in multiple notifications being queued, rather than each notification replacing the last. To hide the notification, temporarily removing the tray icon can be effective. \n\n "TRAYTIP" has no effect if the following REG_DWORD value exists and is 0: \n HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced >> EnableBalloonTips
RSHELL_COMMAND_DOCUMENTATION_TRAYTIP_EXAMPLE=traytip 'Hello' 'This message is displayed for 5 seconds' '5' '1'
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_SYNTAX=msgbox '<options>' '<title>' '<text>' '[timeout]'
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_DESCRIPTION=Displays a dialog box with buttons on the screen (for example: yes / no).
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_TEXT1=Options = Sets the window type (normal, informational, error, warning), as well as button combinations. If omitted, it defaults to 0 (a normal window with an OK button). \nHeader = Title of the message window. Contains the file name Renux by default. \nText = If all options are omitted, the MSGBOX displays the text "Press OK to Continue". Otherwise, this parameter is responsible for the text that will be displayed in the dialog box. You can also use escape sequences such as `n linefeed, `t tabulation, etc. If the text is long, it is recommended to split it over several lines to improve readability. \nTimeout = (optional): Sets the time in seconds before the dialog box is automatically closed. When the time expires, the window will be closed and the variable .message.result will be set to Timeout. Can be a fractional number up to 2147483 (24.8 days).
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_OPTIONS_PREFIX=Options:
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_OPTIONS=You can use several options at the same time, for this, their value must be added, \n For example: We need the Interrupt / Redo / Ignore buttons and an information window, then add 2 + 64, the OPTIONS parameter in this case must contain 66s! \n \n Function - Numerical value: \n OK - 0 \n OK / Cancel - 1 \n Abort / Redo / Skip - 2 \n Yes / No / Cancel - 3 \n Yes / No - 4 \n Redo / Cancel - 5 \n Cancel / Redo / Continue - 6 \n \n Window type: Error - 16 \n Window type: Question - 32 \n Window type: Warning - 48 \n Window type: Information - 64 \n \n Maximum value: 100.
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_ADDITION_PREFIX=Addition:
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_ADDITION=The variable msgbox.response is used to define the button selected by the user:\n  \n  msgbox '4' 'Choice' Do you want to continue? (Click Yes or No)'\n  if '%msgbox.response%' == 'Yes' then output You clicked "Yes"\n  if '%msgbox.response%' == 'No' then You clicked "No"
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_ADVICE_PREFIX=Advice:
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_ADVICE=Pressing Ctrl + C while showing Msgbox (MSGBOX command) copies its text to the clipboard. This applies to all dialog boxes, including those not created by the Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_CLOSE_BUTTON_PREFIX=Close button:
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_CLOSE_BUTTON=If the window has only one choice (OK), the X button will work identically to the OK button.\n  If the window is Yes / No, then the X button will correspond to a negative selection.
RSHELL_COMMAND_DOCUMENTATION_MSGBOX_EXAMPLE=msgbox '0' '' 'Hello' ''\n\n  msgbox '4' '' 'Do you want to continue?' ''\n  if '%.msgbox.response%' == 'No' then exit\n\n  msgbox '4' '' 'See this example using a 5 second timeout. Continue?' '5'\n  if '%.msgbox.response%' == 'Timeout' then msgbox '' '' 'You have not responded within 5 seconds' '';exit\n  if '%.msgbox.response%' == 'No' then exit\n  msgbox '0' '' 'This is the end =(' ''
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_VARNAME=.msgbox.response
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_YES=Yes
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_NO=No
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_OK=OK
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_CANCEL=Cancel
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_ABORT=Abort
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_IGNORE=Ignore
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_RETRY=Retry
RSHELL_COMMAND_INTERNAL_MSGBOX_RESPONSE_WORD_TIMEOUT=Timeout
RSHELL_COMMAND_DOCUMENTATION_SOUND_SET_SYNTAX=sound.set '<new parameter>' '[component type]' '[setting type]' '[device number]'
RSHELL_COMMAND_DOCUMENTATION_SOUND_SET_DESCRIPTION=Changes the settings of the audio device (mixer). A window with these settings opens, for example, when you double-click on the speaker in the tray.
RSHELL_COMMAND_DOCUMENTATION_SOUND_SET_TEXT1=New parameter = New setting. A number in the range -100 to 100, inclusive (can be a floating point number). If the number is indicated with a plus or minus sign, the setting value will be increased or decreased by the indicated amount. Otherwise, the current setting value will be replaced with the specified value. For settings with two possible values, namely ONOFF, MUTE, MONO, LOUDNESS, STEREOENH, BASSBOOST, any positive number will turn the setting on, and zero will turn it off. However, any number with an explicitly indicated sign (plus or minus) will simply switch the setting to the opposite state. \nComponent Type = If omitted or empty, it becomes MASTER (general volume control, which is also available by single clicking on the speaker in the tray). Available Values: MASTER (same as SPEAKERS), DIGITAL, LINE, MICROPHONE, SYNTH, CD, TELEPHONE, PCSPEAKER, WAVE, AUX, ANALOG. If the mixer does not contain the specified component, this will be reflected by a message in the variable. CONSOLE.RESULT (see help). A component designated as Auxiliary in the mixer may sometimes be available as ANALOG rather than AUX. If a mixer has more than one instance of a component, then usually the first contains the playback settings and the second contains the recording settings. To access the second and subsequent instances, add a colon and number to the component name. For example, Analog: 2. \nType of setting = If omitted or empty, it is set to VOLUME. Valid values: VOLUME (or VOL), ONOFF, MUTE, MONO, LOUDNESS, STEREOENH, BASSBOOST, PAN, QSOUNDPAN, BASS, TREBLE, EQUALIZER. If the component does not support the specified type of setting, this will be reflected by a message in the variable. CONSOLE.RESULT (see help). \nDevice number = Can be an expression. Device number. If omitted, it is set to 1, which is usually the system default for recording and playback. To access other devices, specify a number greater than one.
RSHELL_COMMAND_DOCUMENTATION_SOUND_SET_TEXT2=Possible error text: \n - Wrong type of setting or type of component \n - I cannot open the specified mixer \n - The mixer does not support the specified component \n - The number of components of this type in the mixer is less than the specified number \n - The component does not support the specified setting \n - I cannot read the current setting \n - I cannot change the setting
RSHELL_COMMAND_DOCUMENTATION_SOUND_SET_EXAMPLES=// General volume control in the middle.\n  sound.set '50' '' '' ''\n\n  // Increase the overall volume by 10%.\n  sound.set '+10' '' '' ''\n  \n  // Decrease the overall volume by 10%\n  sound.set '-10' '' '' ''\n  \n  // Mute microphone\n  sound.set '1' 'Microphone' 'mute' ''\n  \n  // Switch the master volume switch (to the opposite state).\n  sound.set '+1' '' 'mute' ''\n  \n  // Raise the low frequencies by 20%.\n  sound.set '+20' 'Master' 'bass' ''\n  if '%.console.result%' != '1' then output The bass setting is not supported by the master volume control.
RSHELL_COMMAND_INTERNAL_SOUND_SET_TEXT1=Wrong customization view or component type
RSHELL_COMMAND_INTERNAL_SOUND_SET_TEXT2=Can't open the specified mixer
RSHELL_COMMAND_INTERNAL_SOUND_SET_TEXT3=The mixer does not support the specified component
RSHELL_COMMAND_INTERNAL_SOUND_SET_TEXT4=The number of components of this type in the mixer is less than the specified number
RSHELL_COMMAND_INTERNAL_SOUND_SET_TEXT5=Component does not support the specified setting
RSHELL_COMMAND_INTERNAL_SOUND_SET_TEXT6=Can't get the current setting
RSHELL_COMMAND_INTERNAL_SOUND_SET_TEXT7=Can't change the setting
RSHELL_COMMAND_DOCUMENTATION_FILE_SIZE_SYNTAX=file.size '<variable where the result will be written>' '<path to file>'
RSHELL_COMMAND_DOCUMENTATION_FILE_SIZE_DESCRIPTION=Determines the size of the file in bytes.
RSHELL_COMMAND_DOCUMENTATION_FILE_SIZE_EXAMPLE=file.size 'size' 'C:\test.txt'
RSHELL_COMMAND_DOCUMENTATION_FILE_COPY_DIR_SYNTAX=file.copy.dir '<path to the folder to be copied>' '<path to the folder to be copied to>' '<copy and overwrite? (flag=1/0)>'
RSHELL_COMMAND_DOCUMENTATION_FILE_COPY_DIR_DESCRIPTION=Copies the folder along with its contents to another location.
RSHELL_COMMAND_DOCUMENTATION_FILE_COPY_DIR_EXAMPLE=file.copy.dir 'C:\test' 'C:\test2' '1'
RSHELL_COMMAND_DOCUMENTATION_FILE_COPY_SYNTAX=file.copy '<path to the file to be copied>' '<path to the file to be copied to>' '<copy and overwrite? (flag=1/0)>'
RSHELL_COMMAND_DOCUMENTATION_FILE_COPY_DESCRIPTION=Copies the contents of a file to another file.
RSHELL_COMMAND_DOCUMENTATION_FILE_COPY_EXAMPLE=file.copy 'C:\test.txt' 'C:\test2.txt' '1'
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_DIR_SYNTAX=file.delete.dir <path>
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_DIR_DESCRIPTION=Deletes the folder at the path you specified.
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_DIR_EXAMPLE=file.delete.dir C:\test
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_DIR_TEXT1=Failed to delete folder along path: %1
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_SYNTAX=file.delete <path>
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_DESCRIPTION=Will delete the file at the path you specified.
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_EXAMPLE=file.delete C:\text.txt
RSHELL_COMMAND_DOCUMENTATION_FILE_DELETE_TEXT1=Failed to delete file at path: %1
RSHELL_COMMAND_DOCUMENTATION_FILE_CREATE_DIR_SYNTAX=file.create.dir <path>
RSHELL_COMMAND_DOCUMENTATION_FILE_CREATE_DIR_DESCRIPTION=Will create a folder at the path you specified.
RSHELL_COMMAND_DOCUMENTATION_FILE_CREATE_DIR_EXAMPLE=file.create.dir C:\test
RSHELL_COMMAND_DOCUMENTATION_FILE_APPEND_SYNTAX=file.append '<path>' '<text>'
RSHELL_COMMAND_DOCUMENTATION_FILE_APPEND_DESCRIPTION=Renux will create/supplement the file with text at the path you specified.
RSHELL_COMMAND_DOCUMENTATION_FILE_APPEND_EXAMPLE=file.append 'C:\text.txt' 'Hello world!'
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_LINE_SYNTAX=file.read.line '<variable name for output>' '<path to file>' '<line number (from 1)>
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_LINE_DESCRIPTION=Reads a specific line in a file and puts the text into a variable.
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_LINE_EXAMPLE=file.read.line 'text_4th_line' 'C:\test.txt' '4'
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_SYNTAX=file.read '<variable name>' '<path to file>'
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_DESCRIPTION=Renux will write the contents of the file to a variable.
RSHELL_COMMAND_DOCUMENTATION_FILE_READ_EXAMPLE=file.read 'text' 'C:\text.txt'
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_LABEL_SYNTAX=file.get.label '<array name>' '<file path>'
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_LABEL_DESCRIPTION=Returns the properties of the shortcut as an array.
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_LABEL_EXAMPLE=file.get.label 'label' 'test.lnk'
RSHELL_COMMAND_DOCUMENTATION_FILE_GET_LABEL_TEXT1=Will write information about the shortcut to the array: \n [file] = Variable name where the path to the shortcut object will be placed (without arguments passed to it). For example: C:\Windows\system32\notepad.exe\n [folder] = Variable name where the path to the working folder of the shortcut will be placed. For example: C:\My Documents. \n [parameters] = Variable name to store the parameters passed to the shortcut object. \n [description] = Variable name to save the comment to the shortcut. \n [icon] = Variable name to save the file name where the shortcut icon is located. \n [icon_number] = Variable name to store the shortcut icon number if there is more than one icon in the file. Most often it is number 1, which means the first icon. \n [start_state] = The name of the variable where the window state is placed when the shortcut is launched can be denoted by the following numbers: 1 - normal window; 3 - expanded; 7 - rolled up.
RSHELL_COMMAND_INTERNAL_FILE_GET_LABEL_FILE_WORD=file
RSHELL_COMMAND_INTERNAL_FILE_GET_LABEL_DIR_WORD=folder
RSHELL_COMMAND_INTERNAL_FILE_GET_LABEL_PARAMETERS_WORD=parameters
RSHELL_COMMAND_INTERNAL_FILE_GET_LABEL_DESCRIPTION_WORD=description
RSHELL_COMMAND_INTERNAL_FILE_GET_LABEL_ICON_WORD=icon
RSHELL_COMMAND_INTERNAL_FILE_GET_LABEL_NUMBER_OF_ICON_WORD=icon_number
RSHELL_COMMAND_INTERNAL_FILE_GET_LABEL_START_STATUS_WORD=start_state
RSHELL_COMMAND_DOCUMENTATION_FILE_MOVE_DIR_SYNTAX=file.move.dir '<folder path>' '<new folder path>' '<flag (actions in notes)>'
RSHELL_COMMAND_DOCUMENTATION_FILE_MOVE_DIR_DESCRIPTION=Moves/renames a folder along with all its subfolders and - files.
RSHELL_COMMAND_DOCUMENTATION_FILE_MOVE_DIR_EXAMPLE=file.move.dir 'C:\test' 'C:\Program Files\test' '0'
RSHELL_COMMAND_DOCUMENTATION_FILE_MOVE_DIR_TEXT1=Note: the third argument specifies 0/1/2 / R. \n0 = do not overwrite existing files. The operation will fail if <second argument> s already exists as a file or folder. \n1 = overwrite existing files. However, no files or folders in <first argument> that do not have the same name as specified in <second argument> will not be removed. Known limitation: if <second argument> already exists as a folder and is on the same disk partition as <first argument>, <first argument> will be placed inside <second argument> instead of overwriting it. To avoid this, use the following option. \n2 = Same as 1, but there is no mentioned limitation (recommended instead of 1). \nR = Rename the folder instead of moving it. While renaming normally has the same effect as moving, it can be useful in situations where you want all or nothing, ie. you are not satisfied with the partial success of an operation when <first argument> or one of its files is locked (in use). While this method cannot move the <first argument> to a different section, it can move it to any other folder in its own section. The operation will fail if <second argument> already exists as a file or folder.
RSHELL_COMMAND_DOCUMENTATION_FILE_MOVE_SYNTAX=file.move '<file path>' '<new file path>' '<overwrite copy? (flag = 1/0)>'
RSHELL_COMMAND_DOCUMENTATION_FILE_MOVE_DESCRIPTION=Moves the file to the path you specified.
RSHELL_COMMAND_DOCUMENTATION_FILE_MOVE_EXAMPLE=file.move 'C:\test.txt' 'C:\new_test_name.txt' '1'
RSHELL_COMMAND_DOCUMENTATION_FILE_TIME_GET_SYNTAX=file.time.get '<variable where the result will be written>' <path to file> '' <C/E/A> '
RSHELL_COMMAND_DOCUMENTATION_FILE_TIME_GET_EXAMPLE=file.get.time 'time' 'C:\test.txt' 'C'
RSHELL_COMMAND_DOCUMENTATION_FILE_TIME_GET_TEXT1=The third parameter contains only one letter. It is responsible for what time you need to get: \nC - the time the file was created. \nE - the time the file was last modified. \nA - the time the file was last accessed. \n \nThe returned string will contain the time in the format "YYYYMMDDHH24MISS". \n \n Time format elements in: \nYYYY = Year, 4 digits \nMM = Month, 2 digits (01-12) \nDD = Day of the month, 2 digits (01-31) \nHH24 = Hour in 24-hour format, 2 digits ( 00-23). \nMI = Minutes, 2 digits (00-59) \nSS = Seconds, 2 digits (00-59)
RSHELL_COMMAND_INTERNAL_FILE_TIME_GET_ERRORVALUE=ERROR
RSHELL_COMMAND_INTERNAL_FILE_TIME_GET_CVALUE=C
RSHELL_COMMAND_INTERNAL_FILE_TIME_GET_MVALUE=E
RSHELL_COMMAND_INTERNAL_FILE_TIME_GET_AVALUE=A
RSHELL_COMMAND_DOCUMENTATION_FILE_TIME_SET_SYNTAX=file.time.set '[time in YYYYMMDDHH24MISS format]' '<path to file>'
RSHELL_COMMAND_DOCUMENTATION_FILE_TIME_SET_DESCRIPTION=Changes the date and time stamp of a file or folder.
RSHELL_COMMAND_DOCUMENTATION_FILE_TIME_SET_EXAMPLE=file.time.set '20210122165500' 'C:\test.txt'
RSHELL_COMMAND_DOCUMENTATION_FILE_TIME_SET_TEXT1=If the first parameter is empty, it is set to the current time. Otherwise, specify which time to use (format: YYYYMMDDHH24MISS). Years before 1601 are not supported. \n \nTime format elements: \nYYYY = Year, 4 digits \nMM = Month, 2 digits (01-12) \nDD = Day of the month, 2 digits (01-31) \nHH24 = Hour in 24 hour format, 2 digits (00-23) \nMI = Minutes, 2 digits (00-59) \nSS = Seconds, 2 digits (00-59)
RSHELL_COMMAND_DOCUMENTATION_DOWNLOAD_SYNTAX=download '<direct link>' '<path>'
RSHELL_COMMAND_DOCUMENTATION_DOWNLOAD_DESCRIPTION=Download a file from the Internet.
RSHELL_COMMAND_DOCUMENTATION_DOWNLOAD_EXAMPLE=download 'http://example.com' 'test.html'
RSHELL_COMMAND_DOCUMENTATION_PROG_SYNTAX=prog
RSHELL_COMMAND_DOCUMENTATION_PROG_DESCRIPTION=Interacts with programs from Streleckiy Development.
RSHELL_COMMAND_INTERNAL_PROG_TEXT1=Getting product information...
RSHELL_COMMAND_INTERNAL_PROG_TEXT2=You must install the program (install the console).
RSHELL_COMMAND_INTERNAL_PROG_TEXT3=Failed to get the list of products. Try later.
RSHELL_COMMAND_INTERNAL_PROG_TEXT4=There are %1 applications available for installation:
RSHELL_COMMAND_INTERNAL_PROG_TEXT5=Specify the application number
RSHELL_COMMAND_INTERNAL_PROG_TEXT6=An integer must be specified.
RSHELL_COMMAND_INTERNAL_PROG_TEXT7=The application number is outside the list.
RSHELL_COMMAND_INTERNAL_PROG_TEXT8=The available options are:
RSHELL_COMMAND_INTERNAL_PROG_TEXT9=Update the program
RSHELL_COMMAND_INTERNAL_PROG_TEXT10=Delete a program
RSHELL_COMMAND_INTERNAL_PROG_TEXT11=Enter the action number
RSHELL_COMMAND_INTERNAL_PROG_TEXT12=Install the program
RSHELL_COMMAND_INTERNAL_PROG_TEXT13=Enter the action number
RSHELL_COMMAND_INTERNAL_PROG_TEXT14=Are you sure you want to uninstall the program? [Y/N]
RSHELL_COMMAND_INTERNAL_PROG_TEXT15=Removing program %1...
RSHELL_COMMAND_INTERNAL_PROG_TEXT16=Failed to delete folder at path: %1
RSHELL_COMMAND_INTERNAL_PROG_TEXT17=Failed to get the list of product files. Try later.
RSHELL_COMMAND_INTERNAL_PROG_TEXT18=Files that the program will install:
RSHELL_COMMAND_INTERNAL_PROG_TEXT19=The installation will take up %1 bytes of memory. Install? [Y/N]
RSHELL_COMMAND_INTERNAL_PROG_TEXT21=Downloading file '%1' (%2 bytes) ...
RSHELL_COMMAND_INTERNAL_PROG_TEXT22=The file size does not match the file size on the server. I try to download again...
RSHELL_COMMAND_INTERNAL_PROG_TEXT23=Creating a shortcut on the desktop...
RSHELL_COMMAND_INTERNAL_PROG_TEXT24=Launch
RSHELL_COMMAND_INTERNAL_PROG_TEXT25=Create a Start Menu Shortcut...
RSHELL_COMMAND_DOCUMENTATION_INI_DELETE_SYNTAX=ini.delete '<path to file>' '<section>' '<key>'
RSHELL_COMMAND_DOCUMENTATION_INI_DELETE_DESCRIPTION=Removes a parameter from a standard format INI file.
RSHELL_COMMAND_DOCUMENTATION_INI_DELETE_EXAMPLE=ini.delete 'settings.ini' 'weather' 'city'
RSHELL_COMMAND_DOCUMENTATION_INI_READ_SYNTAX=ini.read '<name of the variable where the value will be written>' '<path to file>' '<section>' '<key>'
RSHELL_COMMAND_DOCUMENTATION_INI_READ_DESCRIPTION=Reads the parameter value from a standard format INI file.
RSHELL_COMMAND_DOCUMENTATION_INI_READ_EXAMPLE=ini.read 'weather_city' 'settings.ini' 'weather' 'city'
RSHELL_COMMAND_DOCUMENTATION_INI_READ_CONSOLERESULT=If the command is executed with an error, it will be written in the variable specified in the first argument. \n The variable. CONSOLE.RESULT changes its value to "1" (one) in any case.
RSHELL_COMMAND_DOCUMENTATION_INI_READ_ERRORVALUE=ERROR
RSHELL_COMMAND_DOCUMENTATION_INI_WRITE_SYNTAX=ini.write '<value>' '<path to file>' '<section>' '<key>'
RSHELL_COMMAND_DOCUMENTATION_INI_WRITE_DESCRIPTION=Writes a parameter to a standard format INI file.
RSHELL_COMMAND_DOCUMENTATION_INI_WRITE_EXAMPLE=ini.write 'Moscow' 'settings.ini' 'weather' 'city' '
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_MEMORY_SYNTAX=drive.get.memory '<variable name for output>' '<path to disk>'
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_MEMORY_DESCRIPTION=Determines the amount of free disk space, in megabytes.
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_MEMORY_EXAMPLE=drive.get.memory 'freediskspace' 'C:\'
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_SYNTAX=drive.get '<variable for output>' '<command>' '[value]'
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_DESCRIPTION=Provides all sorts of information about the disks of the computer.
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_TEXT1=Commands, 'values': \nlist '[type]' = puts in a variable for output a string of letters, each of which is a letter of one of the disks existing in the system. For example: ACDEZ. If [Type] is omitted, all types of discs are listed. If only a specific type is needed, Type can be specified with one of the following words: CDROM, REMOVABLE, FIXED, NETWORK, RAMDISK, UNKNOWN. \ncapacity '<path>' = defines the total capacity of the disk specified in [path] (for example, C:\) in megabytes. \nfs '<drive>' = defines the file system of the disk. <Drive> is either a letter followed by a colon and an optional backslash, or a UNC name like \\server1\share1. One of the following words will be placed in <variable for output>: FAT, FAT32, NTFS, CDFS (usually means CD), UDF (usually means DVD). <Variable to be output> will be empty and% .console.result% is 0 if the drive does not contain formatted media. \nlabel '<drive>' = identifies the disk label. The drive is specified in the <drive> parameter, either by a letter followed by a colon and an optional backslash, or as a UNC name like \\server1\share1. \ntype '<path>' = specifies the type of drive specified in <path>, denoted by one of the following words : Unknown, Removable, Fixed, Network, CDROM, RAMDisk. \nstatus '<path>' = defines the status of the drive specified in <path>, indicated by one of the following words: Unknown (may mean an unformatted disk), Ready, NotReady (typical for drives that do not contain media), Invalid (the drive specified in <path> does not exist or is a network drive that is currently unavailable). \nstatusCD '[drive]' = defines the status of the CD or DVD drive. <Drive> is specified by a letter followed by a colon (if empty, the default CD / DVD drive will be used). The variable to be output will be empty if the state cannot be determined. Otherwise, one of the following words is placed there: \n \nnot ready - The drive is not ready for access, possibly because it is busy with a write operation. Known limitations: "not ready" also occurs when there is a DVD in the drive and not a CD. \nopen - The drive does not contain a disc or its tray is open. \nplaying - The drive is playing a disc. \npaused - Audio or video playback is paused. \nseeking - The drive is busy searching the disc. \nstopped - The drive contains a CD, but is not currently accessing it.
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_TEXT2_PREFIX=Example no. 1:
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_EXAMPLE1=drive.get 'capacity' 'capacity' 'C:\'
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_TEXT3_PREFIX=Example no. 2:
RSHELL_COMMAND_DOCUMENTATION_DRIVE_GET_EXAMPLE2=drive.get 'disklist' 'list' ''
RSHELL_COMMAND_INTERNAL_DRIVE_GET_TEXT1=list
RSHELL_COMMAND_INTERNAL_DRIVE_GET_TEXT2=capacity
RSHELL_COMMAND_INTERNAL_DRIVE_GET_TEXT3=fs
RSHELL_COMMAND_INTERNAL_DRIVE_GET_TEXT4=label
RSHELL_COMMAND_INTERNAL_DRIVE_GET_TEXT5=type
RSHELL_COMMAND_INTERNAL_DRIVE_GET_TEXT6=status
RSHELL_COMMAND_INTERNAL_DRIVE_GET_TEXT7=statusCD
RSHELL_COMMAND_DOCUMENTATION_DRIVE_SYNTAX=drive
RSHELL_COMMAND_DOCUMENTATION_DRIVE_DESCRIPTION=Pulls out / retracts the CD or DVD drive tray.
RSHELL_COMMAND_DOCUMENTATION_DIR_SYNTAX=dir [file name pattern]
RSHELL_COMMAND_DOCUMENTATION_DIR_DESCRIPTION=Will display the contents of the current directory.
RSHELL_COMMAND_DOCUMENTATION_DIR_TEXT1=If the parameter "file name template" is specified, then the search will be performed by the template. Example command using by pattern: dir *.txt
RSHELL_COMMAND_INTERNAL_DIR_TEXT1=Folder content %1:
RSHELL_COMMAND_INTERNAL_DIR_TEXT2=Installed search filter: %1.
RSHELL_COMMAND_INTERNAL_DIR_TEXT3=DIR
RSHELL_COMMAND_INTERNAL_DIR_TEXT4=SCRIPT
RSHELL_COMMAND_INTERNAL_DIR_TEXT5=Found %1 files and %2 folders.
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_SYNTAX1_PREFIX=Syntax no. 1:
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_SYNTAX2_PREFIX=Syntax no. 2:
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_SYNTAX3_PREFIX=Syntax no. 3:
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_SYNTAX1=cd.
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_SYNTAX2=cd..
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_SYNTAX3=cd...
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_DESCRIPTION=Go to the parent directory (one/two/three levels up).
RSHELL_COMMAND_DOCUMENTATION_CD_DOT_NOTE=CD. - move one level up.\n  CD.. - move up two levels.\n  CD... - move up three levels.
RSHELL_COMMAND_DOCUMENTATION_CD_SYNTAX=cd <path to directory / part of directory name / shortcut name / part of shortcut name>
RSHELL_COMMAND_DOCUMENTATION_CD_DESCRIPTION=Change the current directory.
RSHELL_COMMAND_DOCUMENTATION_CD_EXAMPLE=cd C:\\n  cd Windows\n  cd System32
RSHELL_COMMAND_DOCUMENTATION_ATTR_SET_SYNTAX=attr.set '<(+/-)attributes (RASHNDOCT)>' '<path>'
RSHELL_COMMAND_DOCUMENTATION_ATTR_SET_TEXT1=Modifies the attributes of a file or folder.\n\nR = READONLY\nA = ARCHIVE\nS = SYSTEM\nH = HIDDEN\nN = NORMAL\nO = OFFLINE\nT = TEMPORARY
RSHELL_COMMAND_DOCUMENTATION_ATTR_SET_EXAMPLE=attr.set '+A-H' 'C:\test.txt'
RSHELL_COMMAND_DOCUMENTATION_ATTR_GET_SYNTAX=attr.get '<variable where the result will be written>' '<path to file>'
RSHELL_COMMAND_DOCUMENTATION_ATTR_GET_DESCRIPTION=Gets the attributes of a file or folder.
RSHELL_COMMAND_DOCUMENTATION_ATTR_GET_TEXT1=The returned string will contain some of these letters: "RASHNDOCT".\nR = READONLY\nA = ARCHIVE\nS = SYSTEM\nH = HIDDEN\nN = NORMAL\nD = DIRECTORY\nO = OFFLINE\nC = COMPRESSED\nT = TEMPORARY
RSHELL_COMMAND_DOCUMENTATION_ATTR_GET_EXAMPLE=attr.get 'attribs' 'C:\test.txt'
RSHELL_COMMAND_DOCUMENTATION_POST_SYNTAX=post '<variable where the response will be written>' '<URL>' '<request text>'
RSHELL_COMMAND_DOCUMENTATION_POST_DESCRIPTION=Sends a POST request to the server you specified.
RSHELL_COMMAND_DOCUMENTATION_POST_EXAMPLE=post 'response' 'https://api.telegram.org/botXXXXXXXXXXXXXX/sendMessage' 'text=test_message&chat_id=100'
RSHELL_COMMAND_INTERNAL_POST_TEXT1=Failed to create object: WinHttp.WinHttpRequest.5.1
RSHELL_COMMAND_INTERNAL_POST_TEXT2=Failed to open post-request session:
RSHELL_COMMAND_INTERNAL_POST_TEXT3=Failed to add header 'User-Agent' for post-request session.
RSHELL_COMMAND_INTERNAL_POST_TEXT4=Failed to add header 'Content-Type' for post request session.
RSHELL_COMMAND_INTERNAL_POST_TEXT5=Failed to send request with addition:
RSHELL_COMMAND_INTERNAL_POST_TEXT6=We couldn't wait for the server's response!
RSHELL_COMMAND_INTERNAL_POST_TEXT7=Failed to get server response!
RSHELL_COMMAND_DOCUMENTATION_VKAPI_SYNTAX=vkapi '<variable where the response will be written>' '<request text>'
RSHELL_COMMAND_DOCUMENTATION_VKAPI_DESCRIPTION=Send a request to the VK server and write the response to a variable.
RSHELL_COMMAND_DOCUMENTATION_VKAPI_NOTE=Use the command "VKAPI." in order to erase information about the VK token from the current PC.
RSHELL_COMMAND_DOCUMENTATION_VKAPI_EXAMPLE=vkapi 'info' 'users.get'
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT1=Authorization is required to use the VK API.
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT2=How would you like to enter your VKontakte account? [1 - via login/password, 2 - by token, 3 - cancel]
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT3_PREFIX=Enter the phone number/login from the page:
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT4_PREFIX=Enter the password for the page:
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT5=Failed to get server response.
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT6=Captcha input required!
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT7=Try to log in with a token.
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT8=Object creation...
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT9=An error occurred while creating the object. Make sure that you have installed and updated Internet Explorer, and that there are no corrupted files.
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT10=Waiting for the page to load...
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT11=Waiting for user action...
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT12_PREFIX=Specify the token from the page:
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT13=Invalid token!
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT14=Login failed.
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT15=Login successful.
RSHELL_COMMAND_INTERNAL_VKAPI_TEXT16=Now you can use the VK API in the Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_NETWORK_SCAN_SYNTAX=network.scan
RSHELL_COMMAND_DOCUMENTATION_NETWORK_SCAN_DESCRIPTION=Displays current ARP entries by polling for current data.
RSHELL_COMMAND_INTERNAL_VOICESP_COMMON_TEXT1=Creating a SAPI.SpVoice object...
RSHELL_COMMAND_DOCUMENTATION_VOICESP_SPEED_SYNTAX=voicesp.speed <speed (integer from -10 to 10)>
RSHELL_COMMAND_DOCUMENTATION_VOICESP_SPEED_DESCRIPTION=Sets the Speech Rate parameter for Text-To-Speech.
RSHELL_COMMAND_DOCUMENTATION_VOICESP_SPEED_TEXT1=The default speed is 0.
RSHELL_COMMAND_DOCUMENTATION_VOICESP_SPEED_EXAMPLE=voicesp.speed 0
RSHELL_COMMAND_DOCUMENTATION_VOICESP_SAY_SYNTAX=voicesp.say <text>
RSHELL_COMMAND_DOCUMENTATION_VOICESP_SAY_DESCRIPTION=Converts text to speech.
RSHELL_COMMAND_DOCUMENTATION_VOICESP_SAY_EXAMPLE=voicesp.say Hello world!
RSHELL_COMMAND_DOCUMENTATION_VOICESP_VOLUME_SYNTAX=voicesp.volume <volume (integer ranging from 0 to 100)>
RSHELL_COMMAND_DOCUMENTATION_VOICESP_VOLUME_DESCRIPTION=Sets the volume setting for Text-To-Speech.
RSHELL_COMMAND_DOCUMENTATION_VOICESP_VOLUME_TEXT1=The default volume is 100.
RSHELL_COMMAND_DOCUMENTATION_VOICESP_VOLUME_EXAMPLE=voicesp.volume 100
RSHELL_DIRECTIVE_DOCUMENTATION_DWASK_SYNTAX=#DOWNLOAD_NO_DEMAND
RSHELL_DIRECTIVE_DOCUMENTATION_DWASK_DESCRIPTION=Get permission from the user to download files from the Internet without asking (the "download" command always displays how much the file weighs and whether it can be downloaded, with this permission Renux Shell will be able to download files in the background).
RSHELL_DIRECTIVE_INTERNAL_DWASK_TEXT1=Renux asks for permission to download files without asking. [Y/N]
RSHELL_COMMAND_DOCUMENTATION_WIN_HIDE_SYNTAX=win.hide <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_HIDE_DESCRIPTION=Hide the window with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_HIDE_EXAMPLE=win.hide Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_MINIMIZE_SYNTAX=win.minimize <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_MINIMIZE_DESCRIPTION=Minimizes the window with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_MINIMIZE_EXAMPLE=win.minimize Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_MAXIMIZE_SYNTAX=win.maximize <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_MAXIMIZE_DESCRIPTION=Maximizes the window with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_MAXIMIZE_EXAMPLE=win.minimize Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_SHOW_SYNTAX=win.show <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_SHOW_DESCRIPTION=Shows a hidden window with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_SHOW_EXAMPLE=win.show Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_CLOSE_SYNTAX=win.close <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_CLOSE_DESCRIPTION=Closes the window with the title you specified.
RSHELL_COMMAND_DOCUMENTATION_WIN_CLOSE_EXAMPLE=win.close Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_TITLE_SYNTAX=win.title '<title>' '<new title>'
RSHELL_COMMAND_DOCUMENTATION_WIN_TITLE_DESCRIPTION=Changes the title of the window to the one you specified.
RSHELL_COMMAND_DOCUMENTATION_WIN_TITLE_EXAMPLE=win.title 'Untitled - Paint' 'Just Paint'
RSHELL_COMMAND_DOCUMENTATION_WIN_RESTORE_SYNTAX=win.restore <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_RESTORE_DESCRIPTION=Restores the previous size of a minimized or maximized window.
RSHELL_COMMAND_DOCUMENTATION_WIN_RESTORE_EXAMPLE=win.restore Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_ACTIVATE_SYNTAX=win.activate <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_ACTIVATE_DESCRIPTION=Activates the window with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_ACTIVATE_EXAMPLE=win.activate Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_CLOSE_SYNTAX=win.wait.close <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_CLOSE_DESCRIPTION=Waits for the window with the specified title to close.
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_CLOSE_EXAMPLE=win.wait.close Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_DEACTIVE_SYNTAX=win.wait.deactive <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_DEACTIVE_DESCRIPTION=Waits for the window with the specified title to be deactivated.
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_DEACTIVE_EXAMPLE=win.wait.deactive Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_ACTIVE_SYNTAX=win.wait.active <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_ACTIVE_DESCRIPTION=Waits for the window with the specified title to be activated.
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_ACTIVE_EXAMPLE=win.wait.active Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_SYNTAX=win.wait <title/part>
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_DESCRIPTION=Waits to create a window with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_WAIT_EXAMPLE=win.wait Untitled - Paint
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_SYNTAX=wait.key '<variable name>' '<key/keys>'
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_DESCRIPTION=Waits for any of the specified keys/keys to be pressed before continuing.
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_NOTE1=After pressing one of the keys, the name of the key that was pressed will be written to the variable specified in the first argument.
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_NOTE2=If you need to specify several keys at once, then list them separated by commas. Without spaces.
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_TEXT1_PREFIX=Example 1 (expected to press Y):
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_TEXT2_PREFIX=Example 2 (expected to press Y or N):
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_TEXT3=wait.key 'var1' 'Y'
RSHELL_COMMAND_DOCUMENTATION_WAIT_KEY_TEXT4=wait.key 'var2' 'Y,N'
RSHELL_COMMAND_DOCUMENTATION_WAIT_TIME_SYNTAX=wait.time <timeout in milliseconds>
RSHELL_COMMAND_DOCUMENTATION_WAIT_TIME_DESCRIPTION=Waits for the specified amount of time before continuing.
RSHELL_COMMAND_DOCUMENTATION_WAIT_TIME_NOTE=The time-out in milliseconds, ranging from 0 to 2147483647 (24 days).
RSHELL_COMMAND_DOCUMENTATION_WAIT_TIME_EXAMPLE=// Wait 3 seconds\n  wait.time 3000
RSHELL_COMMAND_DOCUMENTATION_EXIT_SYNTAX=exit [code]
RSHELL_COMMAND_DOCUMENTATION_EXIT_DESCRIPTION=Closing Renux Shell process (with exit code).
RSHELL_COMMAND_DOCUMENTATION_EXIT_NOTE=If the [code] parameter is omitted, then it closes with a zero exit code.
RSHELL_COMMAND_DOCUMENTATION_STRING_REPLACE_SYNTAX=string.replace '<name of the variable where the result will be written>' '<string (text)>' '<characters to replace>' '<characters to replace>' '<replace all? (0-no/1-yes)>'
RSHELL_COMMAND_DOCUMENTATION_STRING_REPLACE_DESCRIPTION=Replaces occurrences of the search string with a replacement string.
RSHELL_COMMAND_DOCUMENTATION_STRING_REPLACE_TEXT1_PREFIX=Example no. 1:
RSHELL_COMMAND_DOCUMENTATION_STRING_REPLACE_TEXT2=string.replace 'result' 'red,green,blue,red' 'red' 'yellow' '0'\n  // This example will replace only one word from the beginning of the line ("red" to "yellow").
RSHELL_COMMAND_DOCUMENTATION_STRING_REPLACE_TEXT3_PREFIX=Example no. 2:
RSHELL_COMMAND_DOCUMENTATION_STRING_REPLACE_TEXT4=string.replace 'result' 'red,green,blue,red' 'red' 'yellow' '1'\n  // This example will replace all the words "red" with "yellow".
RSHELL_COMMAND_DOCUMENTATION_STRING_UNUNIT_SYNTAX=string.ununit '<name of the array where the parts will be written>' '<string (text)>' '<character>'
RSHELL_COMMAND_DOCUMENTATION_STRING_UNUNIT_DESCRIPTION=Splits a string into substrings (array).
RSHELL_COMMAND_DOCUMENTATION_STRING_UNUNIT_EXAMPLE=string.ununit 'part' 'Renux | best | console' '|' 
RSHELL_COMMAND_DOCUMENTATION_VAR_SYNTAX=var <variable name> <operation> <new value>
RSHELL_COMMAND_DOCUMENTATION_VAR_TEXT1_PREFIX=Formats (note that quotes are required):
RSHELL_COMMAND_DOCUMENTATION_VAR_TEXT2=Standard: var <name> = <value>\n  Add: var <name> += <value>\n  Subtract: var <name> -= <value>\n  Multiply: var <name> *= <value>\n  Divide: var <name> /= <value>\n  Round: var <name> round <number of characters after the decimal point>\n  Show the list of variables: var list\n  Mathematical expression: var <name> math <expression>\n  Replace: var <name> replace '<search string>' '<replacement string>' '<replace all?(flag 1-yes/0-no)>'\n  Split string: var <name> split '<array name>' '<separator character>'\n  Slice: var <name> slice <character index (starting with 1)>\n  Trim left: var <name> left <number of characters>\n  Trim right: var <name> right <number of characters>\n  Get number of characters: var <name> len\n  Converts to upper case: var <name> up\n  Converts to lower case: var <name> down\n  Separates file name or URL into component parts: var <name> path '<array name>'
RSHELL_COMMAND_DOCUMENTATION_VAR_TEXT3=You can "fold" lines. It is necessary that the value of the variable is not a number (it will merge strings). \nYou can "subtract" strings. It is necessary that the value of the variable is not a number (replaces occurrences from the second parameter with empty space). \nYou can "multiply" strings. It is necessary that the value of the variable is not a number (it will merge strings as many times as you need). \nYou can "split" strings. It is necessary that the value of the variable is not a number (it will write to the value of the variable the number of entries found in the value of the variable).
RSHELL_COMMAND_DOCUMENTATION_VAR_EXAMPLES=Standard: var varStandard = This is the value of the variable "varStandard"\n  Add: var var2 += 10\n  Subtract: var var3 -= 20\n  Multiply: var var4 *= 3\n  Divide: var var5 /= 2\n  Round: var var6 round 0\n  Show list of variables: var list\n  Math expression: var var7 math 50+50/2*3\n  Replace: var var8 replace 'hello' 'bye' '1'\n  Split string: var var8 split 'array' ' '\n  Slice: var var8 slice 4\n  Trim left: var variable left 5\n  Trim right: var variable right 5\n  Get number of characters: var variable len\n  Converts to upper case: var variable up\n  Converts to lower case: var variable down\n  Separates file name or URL into component parts: var path_to_file path 'parts'
RSHELL_COMMAND_INTERNAL_VAR_ROUND_WORD=round
RSHELL_COMMAND_INTERNAL_VAR_LIST_WORD=list
RSHELL_COMMAND_INTERNAL_VAR_TEXT1=The Renux Shell updates some built-in variables only when the command contains '%' (percent sign).
RSHELL_COMMAND_INTERNAL_VAR_TEXT2=is an object
RSHELL_COMMAND_INTERNAL_VAR_MATH_WORD=math
RSHELL_COMMAND_INTERNAL_VAR_SLICE_WORD=slice
RSHELL_COMMAND_INTERNAL_VAR_REPLACE_WORD=replace
RSHELL_COMMAND_INTERNAL_VAR_UNUNIT_WORD=split
RSHELL_COMMAND_INTERNAL_VAR_LEFT_WORD=left
RSHELL_COMMAND_INTERNAL_VAR_RIGHT_WORD=right
RSHELL_COMMAND_INTERNAL_VAR_LEN_WORD=len
RSHELL_COMMAND_INTERNAL_VAR_UPPER_WORD=up
RSHELL_COMMAND_INTERNAL_VAR_LOWER_WORD=down
RSHELL_COMMAND_INTERNAL_VAR_PATH_WORD=path
RSHELL_COMMAND_INTERNAL_VAR_PATH_ARRAY_WORD_NAME=name
RSHELL_COMMAND_INTERNAL_VAR_PATH_ARRAY_WORD_DIR=dir
RSHELL_COMMAND_INTERNAL_VAR_PATH_ARRAY_WORD_EXTENSION=extension
RSHELL_COMMAND_INTERNAL_VAR_PATH_ARRAY_WORD_NAMENOEXT=namenoext
RSHELL_COMMAND_INTERNAL_VAR_PATH_ARRAY_WORD_DISK=disk
RSHELL_COMMAND_DOCUMENTATION_ARR_UNIT_SYNTAX=array.unit '<name of the variable where the result will be written>' '<name of the array>' '<joining symbol>'
RSHELL_COMMAND_DOCUMENTATION_ARR_UNIT_DESCRIPTION=Concatenates an array with indices into one line.
RSHELL_COMMAND_DOCUMENTATION_ARR_UNIT_EXAMPLE=array.unit 'result' 'array' ''\n  The example assumes that the array "array" contains the following elements:\narray[0] == tes\narray[1] == ti\narray[2] == ng\nAs a result of the example, the variable "result" will be equal to the value "testing".
RSHELL_COMMAND_DOCUMENTATION_JSON_SYNTAX=json '<variable to which the result will be written>' '<name of variable with JSON string>' '<path to element>'
RSHELL_COMMAND_DOCUMENTATION_JSON_DESCRIPTION=Retrieves a string from a JSON format string.
RSHELL_COMMAND_DOCUMENTATION_JSON_EXAMPLE=json 'result' 'var1' 'response.items.0.id'
RSHELL_COMMAND_DOCUMENTATION_MOUSE_MOVE_SYNTAX=mouse.move '<x>' '<y>' '<s>'
RSHELL_COMMAND_DOCUMENTATION_MOUSE_MOVE_DESCRIPTION=Moves the mouse cursor.
RSHELL_COMMAND_DOCUMENTATION_MOUSE_MOVE_TEXT1=Maximum speed (third argument): 100
RSHELL_COMMAND_DOCUMENTATION_MOUSE_MOVE_EXAMPLE=mouse.move '100' '100' '1'
RSHELL_COMMAND_DOCUMENTATION_WRITEF_SYNTAX=writef <text>
RSHELL_COMMAND_DOCUMENTATION_WRITEF_DESCRIPTION=Sends keystrokes and mouse clicks to the active window as quickly as possible.
RSHELL_COMMAND_DOCUMENTATION_WRITEF_NOTE=More details in the help: Beginning of work > Tutorial > Emulation of clicks (in batch files)
RSHELL_COMMAND_DOCUMENTATION_WRITEF_EXAMPLE=writef Hello world!
RSHELL_COMMAND_DOCUMENTATION_WRITE_SYNTAX=write <text>
RSHELL_COMMAND_DOCUMENTATION_WRITE_DESCRIPTION=Sends keystrokes and mouse clicks to the active window.
RSHELL_COMMAND_DOCUMENTATION_WRITE_NOTE=More details in the help: Beginning of work > Tutorial > Emulation of clicks (in batch files)
RSHELL_COMMAND_DOCUMENTATION_WRITE_EXAMPLE=write Hello world!
RSHELL_COMMAND_DOCUMENTATION_CMD_SYNTAX=cmd <command>
RSHELL_COMMAND_DOCUMENTATION_CMD_DESCRIPTION=Runs the command on the command line.
RSHELL_COMMAND_DOCUMENTATION_CMD_NOTE1=If in output redirection mode (OUTPUT command): \n  Creates a command line process in which to write the command. It waits for the command to be executed, copies the log and closes the process. After that, it writes the entire log to the output.
RSHELL_COMMAND_DOCUMENTATION_CMD_NOTE2=If not in output redirection mode (default):\n  Opens a command prompt with an order to execute the command.
RSHELL_COMMAND_DOCUMENTATION_CMD_EXAMPLE=cmd dir
RSHELL_COMMAND_DOCUMENTATION_PROCESS_SYNTAX=process '<action>' '<name/pid>'
RSHELL_COMMAND_DOCUMENTATION_PROCESS_OPERATIONS=Possible operations:\n  exist - places the process identifier (PID) in the .console.result variable, if the corresponding process exists, otherwise 0. If the second parameter is empty, the PID of the program itself is determined.\n\n  close - terminates the process (s). If the process (s) completed (s) successfully, the number of completed processes is placed in the result console. Since the process will terminate abruptly - perhaps interrupting at a critical point or losing unsaved data - this method should only be used if the process cannot be closed by applying WIN.CLOSE to one of its windows.\n  wait - waits for the specified process to exist. When a suitable process is found, its identifier (PID) is placed in the result console.\n  wait.close - waits until ALL processes corresponding to the second parameter are closed. If all matching processes terminate, the .console.result is set to 0.\n  freeze - freezes the process by process identifier (PID) or its name.\n  unfreeze - unfreezes a process by process identifier (PID) or its name.\n  list - displays a list of active processes at the time of command execution. The second parameter is ignored.
RSHELL_COMMAND_DOCUMENTATION_PROCESS_CONSOLERESULT=If the command is executed without errors, then the variable changes its value to "1" (one) (excluding the operation "exist").
RSHELL_COMMAND_DOCUMENTATION_PROCESS_EXAMPLE=process 'exist' 'explorer.exe'
RSHELL_COMMAND_INTERNAL_PROCESS_OPERATION1=exist
RSHELL_COMMAND_INTERNAL_PROCESS_OPERATION2=close
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT1=Process %1 with ID %2 terminated successfully.
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT2=Process %1 with ID %2 could not be terminated.
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT3=Total processes have been completed: %1.
RSHELL_COMMAND_INTERNAL_PROCESS_OPERATION3=wait
RSHELL_COMMAND_INTERNAL_PROCESS_OPERATION4=wait.close
RSHELL_COMMAND_INTERNAL_PROCESS_OPERATION5=freeze
RSHELL_COMMAND_INTERNAL_PROCESS_OPERATION6=unfreeze
RSHELL_COMMAND_INTERNAL_PROCESS_OPERATION7=list
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT4=Nameless
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT5=Description
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT6=Identifier
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT7=Path
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT8=Copyright
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT9=Total Processes: %1.
RSHELL_COMMAND_INTERNAL_PROCESS_TEXT10=Command syntax error.
RSHELL_COMMAND_DOCUMENTATION_PSH_SYNTAX=psh <command>
RSHELL_COMMAND_DOCUMENTATION_PSH_DESCRIPTION=Runs the command in PowerShell.
RSHELL_COMMAND_DOCUMENTATION_PSH_TEXT1=If in output redirection mode (OUTPUT command): \n  Creates a command line process in which to write the command. It waits for the command to be executed, copies the log and closes the process. After that, it writes the entire log to the output.
RSHELL_COMMAND_DOCUMENTATION_PSH_TEXT2=If not in output redirection mode (default): \n  Opens a command prompt with an order to execute the command.
RSHELL_COMMAND_DOCUMENTATION_PSH_EXAMPLE=psh dir
RSHELL_COMMAND_DOCUMENTATION_RESTART_SYNTAX=restart
RSHELL_COMMAND_DOCUMENTATION_RESTART_DESCRIPTION=Will restart Renux Shell.
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_SYNTAX=win.elem
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_DESCRIPTION=Get information about a window element.
RSHELL_COMMAND_INTERNAL_WIN_ELEM_TEXT1=Right click on an item to display information.
RSHELL_COMMAND_INTERNAL_WIN_ELEM_TEXT2=Element name
RSHELL_COMMAND_INTERNAL_WIN_ELEM_TEXT3=Position
RSHELL_COMMAND_INTERNAL_WIN_ELEM_TEXT4=Window title
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_MOVE_SYNTAX=win.elem.move '<element name>' '<window title/part>' '<x>' '<y>' '<w>' '<h>'
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_MOVE_DESCRIPTION=Changes the position of the window element with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_MOVE_EXAMPLE=win.elem.move 'Static1' 'Notepad: information' '100' '100' '100' '100'
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_VALUE_SYNTAX=win.elem.value '<element name>' '<window title / part>' '<new value>'
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_VALUE_DESCRIPTION=Will change the value of the window element with the specified title.
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_VALUE_EXAMPLE=win.elem.value 'Static1' 'Notepad: info' 'RENUX DEMONSTRATION'
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_WRITE_SYNTAX=win.elem.write '[element name]' '<window title / part>' '<text>'
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_WRITE_DESCRIPTION=Simulates keystrokes on a window or its element.
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_WRITE_TEXT1=Example no. 1:\n  win.elem.write '' 'Document - WordPad' 'Test message'
RSHELL_COMMAND_DOCUMENTATION_WIN_ELEM_WRITE_TEXT2=Example no. 2:\n  win.elem.write 'Edit1' 'Untitled - Notepad' 'Test message'
RSHELL_SHELL_MODE_TEXT1=%1 lines of code processed.
RSHELL_SHELL_MODE_TEXT2=Optimized code
RSHELL_SHELL_MODE_TEXT3=Optimized function code
RSHELL_SHELL_MODE_TEXT4=Hotkey '%1' activated! Branch to line #%2 succeeded.
RSHELL_SHELL_MODE_TEXT5=The script has been completed.
RSHELL_COMMAND_INTERNAL_IF_PARSE_WORD=then
RSHELL_COMMAND_DOCUMENTATION_IF_TEXT1=Format:\n	"==": if '<text>' == '<text>' then <command>\n	"!=": if '<text>' != '<text>' then <command>\n	">": if '<number>' > '<number>' then <command>\n	"<": if '<number>' < '<number>' then <command>\n	">=": if '<number>' >= '<number>' then <command>\n	"=<": if '<number>' =< '<number>' then <command>\n	"contains": if '<text>' contains '<text>' then <command>\n	"notcontains": if '<text>' notcontains '<text>' then <command>\n	"file exist": if 'file' exist '<path to file>' then <command>\n	"file not exist": if 'file' notexist '<path to file>' then <command>\n	"variable exists": if 'variable' exist '<variable name/array index>' then <command>\n	"variable not exist": if 'variable' notexist '<variable name/array index>' then <command>\nExample:\n	"==": if '%var%' == '1' then output Variable VAR is equal to one.\n	"!=": if 'hello' != 'bye' then output "Hello" is not the same as "bye".\n	">": if '40' > '5' then output 40 over 5.\n	"<": if '%var%' < '5' then output VAR is less than 5.\n	">=": if '%var1%' >= '5' then output Variable VAR1 is greater than or equal to five.\n	"=<": if '4' =< '5' then output 4 is less than or equal to 5.\n	"contains": if 'some text that is written in a variable' contains 'text' then output Found word 'text'.\n	"not contains": if '%text%' notcontains 'any string' then output The variable TEXT does not contain "any string".\n	"file exist": if 'file' exist 'C:\test.txt' then output The file at the path C:\test.txt exists.\n	"file not exists": if 'file' notexist 'C:\test.txt' then output The file in the path C:\test.txt does not exist.\n	"variable exist": if 'variable' exist 'test_variable' then output The variable "test_variable" exists.\n	"variable not exist": if 'variable' notexist 'information[1]' then output The array named "information" with index "1" does not exist.
RSHELL_COMMAND_INTERNAL_IF_TEXT1=Symbol expected: '.
RSHELL_COMMAND_INTERNAL_IF_TEXT2=exist
RSHELL_COMMAND_INTERNAL_IF_TEXT3=file
RSHELL_COMMAND_INTERNAL_IF_TEXT4=variable
RSHELL_COMMAND_INTERNAL_IF_TEXT5=notexist
RSHELL_COMMAND_INTERNAL_IF_TEXT6=variable
RSHELL_COMMAND_INTERNAL_IF_TEXT7=contains
RSHELL_COMMAND_INTERNAL_IF_TEXT8=notcontains
RSHELL_COMMAND_INTERNAL_IF_TEXT9=You specified invalid parameters. Perhaps you specified the command out of format.
RSHELL_COMMAND_DOCUMENTATION_FILE_ADD_LABEL_SYNTAX=file.add.label '<path to file (which will be activated)>' '<path to file (where to write)>' '[working folder]' '[parameters]' '[description]' '[path to icon]' '[hotkeys]' '[icon number]' '[start state]'
RSHELL_COMMAND_DOCUMENTATION_FILE_ADD_LABEL_NOTE=working folder = The folder that will be the current working directory for the target file when the shortcut is launched. If the parameter is empty, the "Working folder" field in the shortcut properties will be empty and the operating system will provide the default working folder when the shortcut is launched. \nparameters = Parameters to pass to the target file on startup. Separate parameters with spaces. If the parameter contains spaces, enclose it in double quotes. \ndescription = Comments describing the shortcut (used by the operating system to display tooltips, etc.). \npath to the icon = Full path and name of the icon that will be used for shortcut. Can be an ICO file or the very first icon in an EXE or DLL file. \nhotkeys = Hotkey for shortcut. A single letter, number, or key name (mouse buttons and other non-standard keys may not be supported). Currently, all hotkeys are created as combinations with CTRL + ALT. For example, if you specify the letter B, the hotkey will be CTRL-ALT-B. \n icon number = The number of the icon in the icon file (if not the first one). Can be an expression. For example, 2 means the second icon. \nstart state = To start in a minimized or maximized window, specify one of the following numbers: 1 - normal window (by default); 3 - expanded; 7 - rolled up.
RSHELL_COMMAND_DOCUMENTATION_FILE_ADD_LABEL_EXAMPLE=file.add.label 'C:\test.exe' 'test.lnk'
RSHELL_COMMAND_DOCUMENTATION_LOOP_SYNTAX=loop [number:] <command>
RSHELL_COMMAND_DOCUMENTATION_LOOP_NOTE=If the first parameter is omitted, then the loop runs indefinitely.
RSHELL_COMMAND_DOCUMENTATION_LOOP_TEXT1=Example with a certain number of repetitions:\n  loop 5: output This message is displayed 5 times
RSHELL_COMMAND_DOCUMENTATION_LOOP_TEXT2=Example with an infinite number of repetitions:\n  loop output This message is displayed indefinitely until you close this window.
RSHELL_COMMAND_DOCUMENTATION_FOR_SYNTAX=for <output: key> <output: value> in <input: array>
RSHELL_COMMAND_DOCUMENTATION_FOR_EXAMPLE=for key value in array do output Key: %key%`nValue: %value%
RSHELL_COMMAND_INTERNAL_FOR_TEXT1=Incorrect command syntax.
RSHELL_COMMAND_INTERNAL_FOR_PARSE_WORD=in
RSHELL_COMMAND_INTERNAL_FOR_PARSE_WORD_DO=do
RSHELL_COMMAND_INTERNAL_FOR_TEXT2=Provide a valid variable value for output.
RSHELL_COMMAND_INTERNAL_FOR_TEXT3=Provide a valid array value.
RSHELL_COMMAND_INTERNAL_FOR_TEXT4=Specify parameter '<command>'.
RSHELL_COMMAND_INTERNAL_FOR_TEXT5=Specify an array name without an index.
RSHELL_SERVICE_LANG_CHANGE_NAME=LANG.CHANGE
RSHELL_SERVICE_LANG_CHANGE_DESCRIPTION=Service for installing an alternative localization file.
RSHELL_SERVICE_LANG_CHANGE_STARTED_TEXT=The installation service for the alternative localization file has started.
RSHELL_SERVICE_LANG_CHANGE_TEXT1=List of available localization files:
RSHELL_SERVICE_LANG_CHANGE_TEXT2=Language
RSHELL_SERVICE_LANG_CHANGE_TEXT3=Specify the serial number of the language to apply it:
RSHELL_SERVICE_LANG_CHANGE_TEXT4=Applying language: %1...
RSHELL_SERVICE_LANG_CHANGE_TEXT5=No language with this name was found.
RSHELL_SERVICE_LANG_CHANGE_TEXT6=The language has been successfully applied. The start command has been changed to be compatible and standard for this localization.
RSHELL_SERVICE_LANG_CHANGE_TEXT7=Current language: %1.

// Version 2.18.1:
RSHELL_UPDINFO_2_18_1=- Fixed localization errors in the "PROG" command.

// Version 2.19:
RSHELL_UPDINFO_2_19=- Minor fixes and improvements.\n- English localization has appeared.